var searchIndex = {};
searchIndex['llvm'] = {"items":[[0,"","llvm","This library provides wrappers for LLVM that are (mostly) memory-safe and follow\nRust idioms.",null,null],[11,"new","cbox","Wrap the pointer in a `CBox`.",0,null],[11,"as_ptr","","Returns the internal pointer.",0,null],[11,"unwrap","","Returns the internal pointer.",0,null],[11,"as_semi","","Returns the box as a 'CSemiBox'.",0,{"inputs":[{"name":"cbox"}],"output":{"name":"csemibox"}}],[11,"as_semi_mut","","Returns the box as a 'CSemiBox'.",0,{"inputs":[{"name":"cbox"}],"output":{"name":"csemibox"}}],[11,"new","","Wrap the pointer in a `CSemiBox`",1,null],[11,"as_ptr","","Returns the internal pointer",1,null],[11,"unwrap","","Returns the internal pointer",1,null],[11,"from","","",1,null],[11,"drop","","Run the destructor",1,null],[6,"Target","llvm","",null,null],[11,"deref","cbox","",1,{"inputs":[{"name":"csemibox"}],"output":{"name":"d"}}],[11,"borrow","","",1,{"inputs":[{"name":"csemibox"}],"output":{"name":"d"}}],[11,"deref_mut","","",1,{"inputs":[{"name":"csemibox"}],"output":{"name":"d"}}],[11,"fmt","","",1,{"inputs":[{"name":"csemibox"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"csemibox"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"csemibox"},{"name":"t"}],"output":{"name":"bool"}}],[11,"from","","",1,{"inputs":[{"name":"csemibox"},{"name":"cstr"}],"output":{"name":"csemibox"}}],[6,"RefTo","llvm","",null,null],[11,"from","cbox","Copy this text using malloc and strcpy.",0,{"inputs":[{"name":"cbox"},{"name":"str"}],"output":{"name":"cbox"}}],[6,"Target","llvm","",null,null],[11,"deref","cbox","",0,{"inputs":[{"name":"cbox"}],"output":{"name":"str"}}],[11,"clone","","",0,{"inputs":[{"name":"cbox"}],"output":{"name":"cbox"}}],[11,"fmt","","",0,{"inputs":[{"name":"cbox"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"cbox"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Target","llvm","",null,null],[11,"deref","cbox","",0,{"inputs":[{"name":"cbox"}],"output":{"name":"t"}}],[11,"borrow","","",0,{"inputs":[{"name":"cbox"}],"output":{"name":"t"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"cbox"}],"output":{"name":"t"}}],[11,"eq","","",0,{"inputs":[{"name":"cbox"},{"name":"t"}],"output":{"name":"bool"}}],[3,"CBox","llvm","A wrapper for pointers made by C that are now completely owned by Rust, so\nthey are not limited by any lifetimes.",null,null],[3,"CSemiBox","","A wrapper for pointers made by C that are now partially owned in Rust.",null,null],[3,"Builder","","This provides a uniform API for creating instructions and inserting them into a basic block.",null,null],[3,"BasicBlock","","A container of instructions that execute sequentially.",null,null],[3,"Context","","Contains all the LLVM entities such as modules.",null,null],[3,"JitEngine","","The MCJIT backend, which compiles functions and values into machine code.",null,null],[3,"JitOptions","","The options to pass to the MCJIT backend.",null,null],[12,"opt_level","","The degree to which optimizations should be done, between 0 and 3.",2,null],[3,"Interpreter","","The interpreter backend",null,null],[3,"GenericValue","","A wrapped value that can be passed to an interpreted function or returned from one",null,null],[3,"Module","","Represents a single translation unit of code.",null,null],[3,"Functions","","An iterator through the functions contained in a module.",null,null],[3,"ObjectFile","","An external object file that has been parsed by LLVLM",null,null],[3,"Symbol","","",null,null],[12,"name","","",3,null],[12,"address","","",3,null],[12,"size","","",3,null],[3,"Symbols","","",null,null],[3,"TargetData","","",null,null],[3,"Target","","",null,null],[3,"FunctionType","","A function signature type",null,null],[3,"StructType","","A structure type, such as a tuple or struct",null,null],[3,"Type","","Defines how a value should be laid out in memory.",null,null],[3,"Arg","","A value that represents an argument that has been given to a function.",null,null],[3,"Value","","A typed value that can be used as an operand in instructions.",null,null],[3,"Function","","A `Value` that represents a `Function`",null,null],[4,"Attribute","","A way of indicating to LLVM how you want arguments / functions to be handled.",null,null],[13,"ZExt","","Zero-extended before or after call.",4,null],[13,"SExt","","Sign-extended before or after call.",4,null],[13,"NoReturn","","Mark the function as not returning.",4,null],[13,"InReg","","Force argument to be passed in register.",4,null],[13,"StructRet","","Hidden pointer to structure to return.",4,null],[13,"NoUnwind","","Function doesn't unwind stack.",4,null],[13,"NoAlias","","Consider to not alias after call.",4,null],[13,"ByVal","","Pass structure by value.",4,null],[13,"Nest","","Nested function static chain.",4,null],[13,"ReadNone","","Function doesn't access memory.",4,null],[13,"ReadOnly","","Function only reads from memory.",4,null],[13,"NoInline","","Never inline this function.",4,null],[13,"AlwaysInline","","Always inline this function.",4,null],[13,"OptimizeForSize","","Optimize this function for size.",4,null],[13,"StackProtect","","Stack protection.",4,null],[13,"StackProtectReq","","Stack protection required.",4,null],[13,"Alignment","","Alignment of parameter (5 bits) stored as log2 of alignment with +1 bias 0 means unaligned (different from align(1)).",4,null],[13,"NoCapture","","Function creates no aliases of pointer.",4,null],[13,"NoRedZone","","Disable redzone.",4,null],[13,"NoImplicitFloat","","Disable implicit float instructions.",4,null],[13,"Naked","","Naked function.",4,null],[13,"InlineHint","","The source language has marked this function as inline.",4,null],[13,"StackAlignment","","Alignment of stack for function (3 bits) stored as log2 of alignment with +1 bias 0 means unaligned (different from alignstack=(1)).",4,null],[13,"ReturnsTwice","","This function returns twice.",4,null],[13,"UWTable","","Function must be in unwind table.",4,null],[13,"NonLazyBind","","Function is called early/often, so lazy binding isn't effective.",4,null],[4,"Predicate","","A way of comparing values",null,null],[13,"Equal","","",5,null],[13,"NotEqual","","",5,null],[13,"GreaterThan","","",5,null],[13,"GreaterThanOrEqual","","",5,null],[13,"LessThan","","",5,null],[13,"LessThanOrEqual","","",5,null],[11,"from","llvm::buffer","",6,{"inputs":[{"name":"llvmmemorybufferref"},{"name":"memorybuffer"}],"output":{"name":"llvmmemorybufferref"}}],[11,"from","","",6,{"inputs":[{"name":"llvmmemorybufferref"},{"name":"memorybuffer"}],"output":{"name":"llvmmemorybufferref"}}],[11,"eq","llvm","",7,{"inputs":[{"name":"basicblock"},{"name":"basicblock"}],"output":{"name":"bool"}}],[11,"from","llvm::block","",8,{"inputs":[{"name":"llvmbasicblockref"},{"name":"basicblock"}],"output":{"name":"llvmbasicblockref"}}],[11,"from","","",8,{"inputs":[{"name":"llvmbasicblockref"},{"name":"basicblock"}],"output":{"name":"llvmbasicblockref"}}],[11,"get_parent","llvm","Return the enclosing method, or `None` if it is non-existant.",7,{"inputs":[{"name":"basicblock"}],"output":{"name":"option"}}],[11,"move_after","","Move this basic block after the `other` basic block in its function.",7,{"inputs":[{"name":"basicblock"},{"name":"basicblock"}],"output":null}],[11,"move_before","","Move this basic block before the `other` basic block in its function.",7,{"inputs":[{"name":"basicblock"},{"name":"basicblock"}],"output":null}],[11,"remove","","Unlink from the containing function, but do not delete it.",7,{"inputs":[{"name":"basicblock"}],"output":null}],[11,"delete","","Delete this basic block.",7,{"inputs":[{"name":"basicblock"}],"output":null}],[11,"eq","","",9,{"inputs":[{"name":"builder"},{"name":"builder"}],"output":{"name":"bool"}}],[11,"from","llvm::builder","",10,{"inputs":[{"name":"llvmbuilderref"},{"name":"builder"}],"output":{"name":"llvmbuilderref"}}],[11,"from","","",10,{"inputs":[{"name":"llvmbuilderref"},{"name":"builder"}],"output":{"name":"llvmbuilderref"}}],[11,"new","llvm","Create a new builder in the context given.",9,{"inputs":[{"name":"builder"},{"name":"context"}],"output":{"name":"csemibox"}}],[11,"position_at_end","","Position the builder at the end of `block`.",9,{"inputs":[{"name":"builder"},{"name":"basicblock"}],"output":null}],[11,"build_ret_void","","Build an instruction that returns from the function with void.",9,{"inputs":[{"name":"builder"}],"output":{"name":"value"}}],[11,"build_ret","","Build an instruction that returns from the function with `value`.",9,{"inputs":[{"name":"builder"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_array_alloca","","Build an instruction that allocates an array with the element type `elem` and the size `size`.",9,{"inputs":[{"name":"builder"},{"name":"type"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_alloca","","Build an instruction that allocates a pointer to fit the size of `ty` then returns this pointer.",9,{"inputs":[{"name":"builder"},{"name":"type"}],"output":{"name":"value"}}],[11,"build_free","","Build an instruction that frees the `val`, which _MUST_ be a pointer that was returned\nfrom `build_alloca`.",9,{"inputs":[{"name":"builder"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_store","","Build an instruction that store the value `val` in the pointer `ptr`.",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_br","","Build an instruction that branches to the block `dest`.",9,{"inputs":[{"name":"builder"},{"name":"basicblock"}],"output":{"name":"value"}}],[11,"build_cond_br","","Build an instruction that branches to `if_block` if `cond` evaluates to true, and `else_block` otherwise.",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"basicblock"},{"name":"option"}],"output":{"name":"value"}}],[11,"build_call","","Build an instruction that calls the function `func` with the arguments `args`.",9,null],[11,"build_tail_call","","Build an instruction that calls the function `func` with the arguments `args`.",9,null],[11,"build_select","","Build an instruction that yields to `true_val` if `cond` is equal to `1`, and `false_val` otherwise.",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"value"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_bit_cast","","Build an instruction that casts a value into a certain type.",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"type"}],"output":{"name":"value"}}],[11,"build_insert_value","","Build an instruction that inserts a value into an aggregate type.",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"value"},{"name":"usize"}],"output":{"name":"value"}}],[11,"build_gep","","Build an instruction that computes the address of a subelement of an aggregate data structure.",9,null],[11,"build_switch","","Build an instruction that runs whichever block matches the value, or `default` if none of them matched it.",9,null],[11,"build_load","","",9,{"inputs":[{"name":"builder"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_neg","","",9,{"inputs":[{"name":"builder"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_not","","",9,{"inputs":[{"name":"builder"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_add","","",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_sub","","",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_mul","","",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_div","","",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_shl","","",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_ashr","","",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_and","","",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_or","","",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"value"}],"output":{"name":"value"}}],[11,"build_cmp","","Build an instruction to compare two values with the predicate",9,{"inputs":[{"name":"builder"},{"name":"value"},{"name":"value"},{"name":"predicate"}],"output":{"name":"value"}}],[11,"dispose","","",9,{"inputs":[{"name":"builder"},{"name":"llvmbuilderref"}],"output":null}],[11,"eq","","",11,{"inputs":[{"name":"context"},{"name":"context"}],"output":{"name":"bool"}}],[11,"from","llvm::context","",12,{"inputs":[{"name":"llvmcontextref"},{"name":"context"}],"output":{"name":"llvmcontextref"}}],[11,"from","","",12,{"inputs":[{"name":"llvmcontextref"},{"name":"context"}],"output":{"name":"llvmcontextref"}}],[11,"get_global","llvm","Get a reference to the global context.",11,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"new","","Create a new context, owned by the block that calls it.",11,{"inputs":[{"name":"context"}],"output":{"name":"cbox"}}],[11,"dispose","","",11,null],[11,"clone","","",2,{"inputs":[{"name":"jitoptions"}],"output":{"name":"jitoptions"}}],[11,"from","llvm::engine","Convert into a native pointer",13,{"inputs":[{"name":"llvmexecutionengineref"},{"name":"jitengine"}],"output":{"name":"llvmexecutionengineref"}}],[11,"from","","Convert into a native pointer",13,{"inputs":[{"name":"llvmexecutionengineref"},{"name":"jitengine"}],"output":{"name":"llvmexecutionengineref"}}],[11,"from","","Convert into a native pointer",13,{"inputs":[{"name":"llvmexecutionengineref"},{"name":"jitengine"}],"output":{"name":"llvmexecutionengineref"}}],[11,"from","llvm","Convert from a native pointer",14,{"inputs":[{"name":"jitengine"},{"name":"llvmexecutionengineref"}],"output":{"name":"jitengine"}}],[11,"with_function","","Run the closure `cb` with the machine code for the function `function`.",14,{"inputs":[{"name":"jitengine"},{"name":"function"},{"name":"c"}],"output":null}],[11,"with_function_unchecked","","Run the closure `cb` with the machine code for the function `function`.",14,{"inputs":[{"name":"jitengine"},{"name":"function"},{"name":"c"}],"output":null}],[11,"get_function","","Returns a pointer to the machine code for the function `function`.",14,null],[11,"new","","",14,{"inputs":[{"name":"jitengine"},{"name":"module"},{"name":"jitoptions"}],"output":{"name":"result"}}],[11,"from","llvm::engine","Convert into a native pointer",13,{"inputs":[{"name":"llvmexecutionengineref"},{"name":"interpreter"}],"output":{"name":"llvmexecutionengineref"}}],[11,"from","","Convert into a native pointer",13,{"inputs":[{"name":"llvmexecutionengineref"},{"name":"interpreter"}],"output":{"name":"llvmexecutionengineref"}}],[11,"from","","Convert into a native pointer",13,{"inputs":[{"name":"llvmexecutionengineref"},{"name":"interpreter"}],"output":{"name":"llvmexecutionengineref"}}],[11,"from","llvm","Convert from a native pointer",15,{"inputs":[{"name":"interpreter"},{"name":"llvmexecutionengineref"}],"output":{"name":"interpreter"}}],[11,"run_function","","Run `function` with the arguments given as ``GenericValue`s, then return the result as one.",15,null],[11,"new","","",15,null],[11,"from","llvm::engine","Convert into a native pointer",16,{"inputs":[{"name":"llvmgenericvalueref"},{"name":"genericvalue"}],"output":{"name":"llvmgenericvalueref"}}],[11,"from","","Convert into a native pointer",16,{"inputs":[{"name":"llvmgenericvalueref"},{"name":"genericvalue"}],"output":{"name":"llvmgenericvalueref"}}],[11,"from","","Convert into a native pointer",16,{"inputs":[{"name":"llvmgenericvalueref"},{"name":"genericvalue"}],"output":{"name":"llvmgenericvalueref"}}],[11,"from","llvm","Convert from a native pointer",17,{"inputs":[{"name":"genericvalue"},{"name":"llvmgenericvalueref"}],"output":{"name":"genericvalue"}}],[11,"drop","","",17,{"inputs":[{"name":"genericvalue"}],"output":null}],[11,"eq","","",18,{"inputs":[{"name":"module"},{"name":"module"}],"output":{"name":"bool"}}],[11,"from","llvm::module","",19,{"inputs":[{"name":"llvmmoduleref"},{"name":"module"}],"output":{"name":"llvmmoduleref"}}],[11,"from","","",19,{"inputs":[{"name":"llvmmoduleref"},{"name":"module"}],"output":{"name":"llvmmoduleref"}}],[11,"new","llvm","Create a new module in the context given with the name given.",18,{"inputs":[{"name":"module"},{"name":"str"},{"name":"context"}],"output":{"name":"csemibox"}}],[11,"add_global","","Add a global to the module with the given type and name.",18,{"inputs":[{"name":"module"},{"name":"str"},{"name":"type"}],"output":{"name":"value"}}],[11,"add_global_constant","","Add a constant global to the module with the given type, name and value.",18,{"inputs":[{"name":"module"},{"name":"str"},{"name":"value"}],"output":{"name":"value"}}],[11,"get_global","","Get the global with the name given, or `None` if no global with that name exists.",18,{"inputs":[{"name":"module"},{"name":"str"}],"output":{"name":"option"}}],[11,"parse_bitcode","","Parse this bitcode file into a module, or return an error string.",18,{"inputs":[{"name":"module"},{"name":"context"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_bitcode","","Write this module's bitcode to the path given.",18,{"inputs":[{"name":"module"},{"name":"str"}],"output":{"name":"ioresult"}}],[11,"add_function","","Add a function to the module with the name given.",18,{"inputs":[{"name":"module"},{"name":"str"},{"name":"type"}],"output":{"name":"function"}}],[11,"get_function","","Returns the function with the name given if it exists.",18,{"inputs":[{"name":"module"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_type","","Returns the type with the name given if it exists.",18,{"inputs":[{"name":"module"},{"name":"str"}],"output":{"name":"option"}}],[11,"clone","","Clone this module.",18,{"inputs":[{"name":"module"}],"output":{"name":"csemibox"}}],[11,"optimize","","Optimize this module with the given optimization level and size level.",18,{"inputs":[{"name":"module"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"get_target","","Returns the target data of this module represented as a string",18,{"inputs":[{"name":"module"}],"output":{"name":"str"}}],[11,"set_target","","Set the target data of this module",18,{"inputs":[{"name":"module"},{"name":"str"}],"output":null}],[11,"verify","","Verify that the module is safe to run.",18,{"inputs":[{"name":"module"}],"output":{"name":"result"}}],[11,"compile","","Compile the module into an object file at the given location.",18,{"inputs":[{"name":"module"},{"name":"path"},{"name":"usize"}],"output":{"name":"ioresult"}}],[11,"link","","Link a module into this module",18,{"inputs":[{"name":"module"},{"name":"module"}],"output":{"name":"result"}}],[11,"link_destroy","","Link a module into this module",18,{"inputs":[{"name":"module"},{"name":"csemibox"}],"output":{"name":"result"}}],[11,"get_context","","",18,{"inputs":[{"name":"module"}],"output":{"name":"context"}}],[11,"fmt","","",18,{"inputs":[{"name":"module"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"dispose","","",18,null],[11,"clone","","",20,{"inputs":[{"name":"functions"}],"output":{"name":"functions"}}],[11,"next","","",20,{"inputs":[{"name":"functions"}],"output":{"name":"option"}}],[11,"from","llvm::object","Convert into a native pointer",21,{"inputs":[{"name":"llvmobjectfileref"},{"name":"objectfile"}],"output":{"name":"llvmobjectfileref"}}],[11,"from","","Convert into a native pointer",21,{"inputs":[{"name":"llvmobjectfileref"},{"name":"objectfile"}],"output":{"name":"llvmobjectfileref"}}],[11,"from","","Convert into a native pointer",21,{"inputs":[{"name":"llvmobjectfileref"},{"name":"objectfile"}],"output":{"name":"llvmobjectfileref"}}],[11,"from","llvm","Convert from a native pointer",22,{"inputs":[{"name":"objectfile"},{"name":"llvmobjectfileref"}],"output":{"name":"objectfile"}}],[11,"read","","Attempt to parse the object file at the path given",22,{"inputs":[{"name":"objectfile"},{"name":"str"}],"output":{"name":"result"}}],[11,"symbols","","Iterate through the symbols in this object fil",22,{"inputs":[{"name":"objectfile"}],"output":{"name":"symbols"}}],[11,"next","","",23,{"inputs":[{"name":"symbols"}],"output":{"name":"option"}}],[11,"drop","","",23,{"inputs":[{"name":"symbols"}],"output":null}],[11,"clone","","",3,{"inputs":[{"name":"symbol"}],"output":{"name":"symbol"}}],[11,"fmt","","",3,{"inputs":[{"name":"symbol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Get the pointer for this symbol",3,{"inputs":[{"name":"symbol"}],"output":{"name":"t"}}],[11,"eq","","",24,{"inputs":[{"name":"targetdata"},{"name":"targetdata"}],"output":{"name":"bool"}}],[11,"from","llvm::target","",25,{"inputs":[{"name":"llvmtargetdataref"},{"name":"targetdata"}],"output":{"name":"llvmtargetdataref"}}],[11,"from","","",25,{"inputs":[{"name":"llvmtargetdataref"},{"name":"targetdata"}],"output":{"name":"llvmtargetdataref"}}],[11,"new","llvm","Creates target data from a target layout string.",24,{"inputs":[{"name":"targetdata"},{"name":"str"}],"output":{"name":"cbox"}}],[11,"is_big_endian","","Returns true if the target is big endian.",24,{"inputs":[{"name":"targetdata"}],"output":{"name":"bool"}}],[11,"get_pointer_size","","Returns the size of a pointer on the target.",24,{"inputs":[{"name":"targetdata"}],"output":{"name":"usize"}}],[11,"size_of_in_bits","","Returns the size of the type given in bits.",24,{"inputs":[{"name":"targetdata"},{"name":"type"}],"output":{"name":"u64"}}],[11,"size_of","","Returns the size of the type given in bytes.",24,{"inputs":[{"name":"targetdata"},{"name":"type"}],"output":{"name":"u64"}}],[11,"alignment_of","","Returns the alignment of the type given in bytes.",24,{"inputs":[{"name":"targetdata"},{"name":"type"}],"output":{"name":"usize"}}],[11,"element_at","","Computes the structure element that contains the byte offset for a target.",24,{"inputs":[{"name":"targetdata"},{"name":"type"},{"name":"u64"}],"output":{"name":"usize"}}],[11,"offset_of","","Compute the byte offset of an element in the struct type given.",24,{"inputs":[{"name":"targetdata"},{"name":"type"},{"name":"usize"}],"output":{"name":"u64"}}],[11,"as_str","","Converts this to a target layout string and returns it.",24,{"inputs":[{"name":"targetdata"}],"output":{"name":"cbox"}}],[11,"fmt","","",24,{"inputs":[{"name":"targetdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"dispose","","",24,{"inputs":[{"name":"targetdata"},{"name":"llvmtargetdataref"}],"output":null}],[11,"eq","","",26,{"inputs":[{"name":"target"},{"name":"target"}],"output":{"name":"bool"}}],[11,"from","llvm::target","",27,{"inputs":[{"name":"llvmtargetref"},{"name":"target"}],"output":{"name":"llvmtargetref"}}],[11,"from","","",27,{"inputs":[{"name":"llvmtargetref"},{"name":"target"}],"output":{"name":"llvmtargetref"}}],[11,"get_name","llvm","Returns the name of this target.",26,{"inputs":[{"name":"target"}],"output":{"name":"str"}}],[11,"get_description","","Returns the description of this target.",26,{"inputs":[{"name":"target"}],"output":{"name":"str"}}],[11,"has_asm_backend","","Returns `true` if this target has an assembly generation backend in LLVM.",26,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"has_jit","","Returns `true` if this target supports JIT compilation.",26,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"has_target_machine","","Returns `true` if this target has a target machine.",26,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"eq","","",28,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from","llvm::ty","",29,{"inputs":[{"name":"llvmtyperef"},{"name":"type"}],"output":{"name":"llvmtyperef"}}],[11,"from","","",29,{"inputs":[{"name":"llvmtyperef"},{"name":"type"}],"output":{"name":"llvmtyperef"}}],[11,"get","llvm","Get the type given as an LLVM type descriptor in the context given.",28,{"inputs":[{"name":"type"},{"name":"context"}],"output":{"name":"type"}}],[11,"new_function","","Make a new function signature with the return type and arguments given.",28,null],[11,"new_array","","Make a new array with the length given.",28,{"inputs":[{"name":"type"},{"name":"type"},{"name":"usize"}],"output":{"name":"type"}}],[11,"new_vector","","Make a new vector with the length given.",28,{"inputs":[{"name":"type"},{"name":"type"},{"name":"usize"}],"output":{"name":"type"}}],[11,"new_pointer","","Make a new pointer with the given element type.",28,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"type"}}],[11,"new_struct","","Make a new structure type with the given types.",28,null],[11,"is_sized","","Returns true if the size of the type is known at compile-time.",28,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"is_function","","Returns true if this type is a function.",28,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"is_struct","","Returns true if this type is a struct.",28,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"is_void","","Returns true if this type is void.",28,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"is_pointer","","Returns true if this type is a pointer.",28,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"is_integer","","Returns true if this type is an integer.",28,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"is_float","","Returns true if this type is any floating-point number.",28,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"get_size","","Returns the size of the type in bytes.",28,{"inputs":[{"name":"type"},{"name":"targetdata"}],"output":{"name":"usize"}}],[11,"get_element","","Returns the element of this pointer type.",28,{"inputs":[{"name":"type"}],"output":{"name":"option"}}],[11,"get_context","","",28,{"inputs":[{"name":"type"}],"output":{"name":"context"}}],[11,"fmt","","",28,{"inputs":[{"name":"type"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"structtype"},{"name":"structtype"}],"output":{"name":"bool"}}],[11,"from","llvm::ty","",29,{"inputs":[{"name":"llvmtyperef"},{"name":"structtype"}],"output":{"name":"llvmtyperef"}}],[11,"from","","",29,{"inputs":[{"name":"llvmtyperef"},{"name":"structtype"}],"output":{"name":"llvmtyperef"}}],[11,"new","llvm","Make a new struct with the given fields and packed representation.",30,null],[11,"new_named","","Make a new named struct with the given fields and packed representation.",30,null],[11,"get_elements","","Returns the elements (AKA fields) that make up this struct.",30,{"inputs":[{"name":"structtype"}],"output":{"name":"vec"}}],[11,"cast","","",30,{"inputs":[{"name":"structtype"},{"name":"type"}],"output":{"name":"option"}}],[11,"deref","","",30,{"inputs":[{"name":"structtype"}],"output":{"name":"type"}}],[11,"get_context","","",30,{"inputs":[{"name":"structtype"}],"output":{"name":"context"}}],[11,"fmt","","",30,{"inputs":[{"name":"structtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"functiontype"},{"name":"functiontype"}],"output":{"name":"bool"}}],[11,"from","llvm::ty","",29,{"inputs":[{"name":"llvmtyperef"},{"name":"functiontype"}],"output":{"name":"llvmtyperef"}}],[11,"from","","",29,{"inputs":[{"name":"llvmtyperef"},{"name":"functiontype"}],"output":{"name":"llvmtyperef"}}],[11,"deref","llvm","",31,{"inputs":[{"name":"functiontype"}],"output":{"name":"type"}}],[11,"cast","","",31,{"inputs":[{"name":"functiontype"},{"name":"type"}],"output":{"name":"option"}}],[11,"num_params","","Returns how many parameters this signature takes.",31,{"inputs":[{"name":"functiontype"}],"output":{"name":"usize"}}],[11,"get_params","","Returns a vector of this signature's parameters' types.",31,{"inputs":[{"name":"functiontype"}],"output":{"name":"vec"}}],[11,"get_return","","Returns the type that this function returns.",31,{"inputs":[{"name":"functiontype"}],"output":{"name":"type"}}],[11,"get_context","","",31,{"inputs":[{"name":"functiontype"}],"output":{"name":"context"}}],[11,"fmt","","",31,{"inputs":[{"name":"functiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"from","llvm::value","",33,{"inputs":[{"name":"llvmvalueref"},{"name":"value"}],"output":{"name":"llvmvalueref"}}],[11,"from","","",33,{"inputs":[{"name":"llvmvalueref"},{"name":"value"}],"output":{"name":"llvmvalueref"}}],[11,"new_struct","llvm","Create a new constant struct from the values given.",32,null],[11,"new_vector","","Create a new constant vector from the values given.",32,null],[11,"new_string","","Create a new constant C string from the text given.",32,{"inputs":[{"name":"value"},{"name":"context"},{"name":"str"},{"name":"bool"}],"output":{"name":"value"}}],[11,"new_undef","","Create a new constant undefined value of the given type.",32,{"inputs":[{"name":"value"},{"name":"type"}],"output":{"name":"value"}}],[11,"get_name","","Returns the name of this value, or `None` if itlacks a name",32,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"set_name","","Sets the name of this value",32,{"inputs":[{"name":"value"},{"name":"str"}],"output":null}],[11,"get_type","","Returns the type of this value",32,{"inputs":[{"name":"value"}],"output":{"name":"type"}}],[11,"eq","","",5,{"inputs":[{"name":"predicate"},{"name":"predicate"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"predicate"},{"name":"predicate"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"predicate"}],"output":{"name":"predicate"}}],[11,"eq","","",34,{"inputs":[{"name":"arg"},{"name":"arg"}],"output":{"name":"bool"}}],[11,"from","llvm::value","",33,{"inputs":[{"name":"llvmvalueref"},{"name":"arg"}],"output":{"name":"llvmvalueref"}}],[11,"from","","",33,{"inputs":[{"name":"llvmvalueref"},{"name":"arg"}],"output":{"name":"llvmvalueref"}}],[11,"deref","llvm","",34,{"inputs":[{"name":"arg"}],"output":{"name":"value"}}],[11,"add_attribute","","Add an attribute to a function argument",34,{"inputs":[{"name":"arg"},{"name":"attribute"}],"output":null}],[11,"add_attributes","","Add attributes to this function argument",34,null],[11,"has_attribute","","Get the attributes set for a function argument",34,{"inputs":[{"name":"arg"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"has_attributes","","Check if this argument has all the attributes given",34,null],[11,"remove_attribute","","Remove an attribute from a function argument",34,{"inputs":[{"name":"arg"},{"name":"attribute"}],"output":null}],[11,"eq","","",35,{"inputs":[{"name":"function"},{"name":"function"}],"output":{"name":"bool"}}],[11,"from","llvm::value","",33,{"inputs":[{"name":"llvmvalueref"},{"name":"function"}],"output":{"name":"llvmvalueref"}}],[11,"from","","",33,{"inputs":[{"name":"llvmvalueref"},{"name":"function"}],"output":{"name":"llvmvalueref"}}],[11,"deref","llvm","",35,{"inputs":[{"name":"function"}],"output":{"name":"value"}}],[11,"index","","",35,{"inputs":[{"name":"function"},{"name":"usize"}],"output":{"name":"arg"}}],[11,"cast","","",35,{"inputs":[{"name":"function"},{"name":"value"}],"output":{"name":"option"}}],[11,"append","","Add a basic block with the name given to the function and return it.",35,{"inputs":[{"name":"function"},{"name":"str"}],"output":{"name":"basicblock"}}],[11,"get_entry","","Returns the entry block of this function or `None` if there is none.",35,{"inputs":[{"name":"function"}],"output":{"name":"option"}}],[11,"get_name","","Returns the name of this function.",35,{"inputs":[{"name":"function"}],"output":{"name":"str"}}],[11,"get_signature","","Returns the function signature representing this function's signature.",35,{"inputs":[{"name":"function"}],"output":{"name":"functiontype"}}],[11,"add_attribute","","Add an attribute to this function.",35,{"inputs":[{"name":"function"},{"name":"attribute"}],"output":null}],[11,"add_attributes","","Add attributes to this function.",35,null],[11,"has_attribute","","Check if the attribute is set.",35,{"inputs":[{"name":"function"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"has_attributes","","Check if this function has all the attributes given.",35,null],[11,"remove_attribute","","Remove an attribute from the function.",35,{"inputs":[{"name":"function"},{"name":"attribute"}],"output":null}],[11,"get_context","","",35,{"inputs":[{"name":"function"}],"output":{"name":"context"}}],[11,"fmt","","",4,{"inputs":[{"name":"attribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"attribute"}],"output":{"name":"attribute"}}],[11,"from","","",4,{"inputs":[{"name":"attribute"},{"name":"llvmattribute"}],"output":{"name":"attribute"}}],[11,"from","llvm_sys","",36,{"inputs":[{"name":"llvmattribute"},{"name":"attribute"}],"output":{"name":"llvmattribute"}}],[11,"get_context","llvm","",32,{"inputs":[{"name":"value"}],"output":{"name":"context"}}],[11,"fmt","","",32,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Compile","","Implemented for any type that can be represented as a constant in IR.",null,null],[10,"compile","","Compile this value in the context given.",37,{"inputs":[{"name":"compile"},{"name":"context"}],"output":{"name":"value"}}],[10,"get_type","","Get the type descriptor for this type in the context given.",37,{"inputs":[{"name":"compile"},{"name":"context"}],"output":{"name":"type"}}],[8,"GetContext","","Implemented by everything that is owned by a context.",null,null],[10,"get_context","","Returns a reference to the context that owns this value.",38,{"inputs":[{"name":"getcontext"}],"output":{"name":"context"}}],[8,"ExecutionEngine","","An abstract interface for implementation execution of LLVM modules.",null,null],[16,"Options","","The options given to this upon creation.",39,null],[10,"new","","Create a new execution engine with the given `Module` and options, or return a\ndescription of the error.",39,{"inputs":[{"name":"executionengine"},{"name":"module"},{"name":"options"}],"output":{"name":"result"}}],[11,"add_module","","Add a module to the list of modules to interpret or compile.",39,{"inputs":[{"name":"executionengine"},{"name":"module"}],"output":null}],[11,"remove_module","","Remove a module from the list of modules to interpret or compile.",39,{"inputs":[{"name":"executionengine"},{"name":"module"}],"output":{"name":"module"}}],[11,"run_static_constructors","","Execute all of the static constructors for this program.",39,{"inputs":[{"name":"executionengine"}],"output":null}],[11,"run_static_destructors","","Execute all of the static destructors for this program.",39,{"inputs":[{"name":"executionengine"}],"output":null}],[11,"find_function","","Attempt to find a function with the name given, or `None` if there wasn't\na function with that name.",39,{"inputs":[{"name":"executionengine"},{"name":"str"}],"output":{"name":"option"}}],[11,"run_function","","Run `function` with the arguments given as ``GenericValue`s, then return the result as one.",39,null],[11,"get_global","","Returns a pointer to the global value given.",39,{"inputs":[{"name":"executionengine"},{"name":"value"}],"output":{"name":"t"}}],[11,"find_global","","Returns a pointer to the global value with the name given.",39,{"inputs":[{"name":"executionengine"},{"name":"str"}],"output":{"name":"option"}}],[8,"GenericValueCast","","A value that can be cast into a `GenericValue` and that a `GenericValue` can be cast into.",null,null],[10,"to_generic","","Create a `GenericValue` from this value.",40,{"inputs":[{"name":"genericvaluecast"},{"name":"context"}],"output":{"name":"genericvalue"}}],[10,"from_generic","","Convert the `GenericValue` into a value of this type again.",40,{"inputs":[{"name":"genericvaluecast"},{"name":"genericvalue"},{"name":"context"}],"output":{"name":"self"}}],[8,"CastFrom","","Cast between types",null,null],[16,"From","","",41,null],[10,"cast","","",41,{"inputs":[{"name":"castfrom"},{"name":"from"}],"output":{"name":"option"}}],[11,"add_module","","Add a module to the list of modules to interpret or compile.",39,null],[11,"remove_module","","Remove a module from the list of modules to interpret or compile.",39,null],[11,"run_static_constructors","","Execute all of the static constructors for this program.",39,null],[11,"run_static_destructors","","Execute all of the static destructors for this program.",39,null],[11,"find_function","","Attempt to find a function with the name given, or `None` if there wasn't\na function with that name.",39,null],[11,"run_function","","Run `function` with the arguments given as ``GenericValue`s, then return the result as one.",39,null],[11,"get_global","","Returns a pointer to the global value given.",39,null],[11,"find_global","","Returns a pointer to the global value with the name given.",39,null]],"paths":[[3,"CBox"],[3,"CSemiBox"],[3,"JitOptions"],[3,"Symbol"],[4,"Attribute"],[4,"Predicate"],[6,"LLVMMemoryBufferRef"],[3,"BasicBlock"],[6,"LLVMBasicBlockRef"],[3,"Builder"],[6,"LLVMBuilderRef"],[3,"Context"],[6,"LLVMContextRef"],[6,"LLVMExecutionEngineRef"],[3,"JitEngine"],[3,"Interpreter"],[6,"LLVMGenericValueRef"],[3,"GenericValue"],[3,"Module"],[6,"LLVMModuleRef"],[3,"Functions"],[6,"LLVMObjectFileRef"],[3,"ObjectFile"],[3,"Symbols"],[3,"TargetData"],[6,"LLVMTargetDataRef"],[3,"Target"],[6,"LLVMTargetRef"],[3,"Type"],[6,"LLVMTypeRef"],[3,"StructType"],[3,"FunctionType"],[3,"Value"],[6,"LLVMValueRef"],[3,"Arg"],[3,"Function"],[3,"LLVMAttribute"],[8,"Compile"],[8,"GetContext"],[8,"ExecutionEngine"],[8,"GenericValueCast"],[8,"CastFrom"]]};
searchIndex['llvm_sys'] = {"items":[[0,"","llvm_sys","Bindings to LLVM's C API.",null,null],[3,"LLVMMemoryBuffer","","",null,null],[3,"LLVMContext","","",null,null],[3,"LLVMModule","","",null,null],[3,"LLVMType","","",null,null],[3,"LLVMValue","","",null,null],[3,"LLVMBasicBlock","","",null,null],[3,"LLVMBuilder","","",null,null],[3,"LLVMModuleProvider","","",null,null],[3,"LLVMPassManager","","",null,null],[3,"LLVMPassRegistry","","",null,null],[3,"LLVMUse","","",null,null],[3,"LLVMDiagnosticInfo","","",null,null],[3,"LLVMAttribute","","",null,null],[4,"LLVMOpcode","","",null,null],[13,"LLVMRet","","",0,null],[13,"LLVMBr","","",0,null],[13,"LLVMSwitch","","",0,null],[13,"LLVMIndirectBr","","",0,null],[13,"LLVMInvoke","","",0,null],[13,"LLVMUnreachable","","",0,null],[13,"LLVMAdd","","",0,null],[13,"LLVMFAdd","","",0,null],[13,"LLVMSub","","",0,null],[13,"LLVMFSub","","",0,null],[13,"LLVMMul","","",0,null],[13,"LLVMFMul","","",0,null],[13,"LLVMUDiv","","",0,null],[13,"LLVMSDiv","","",0,null],[13,"LLVMFDiv","","",0,null],[13,"LLVMURem","","",0,null],[13,"LLVMSRem","","",0,null],[13,"LLVMFRem","","",0,null],[13,"LLVMShl","","",0,null],[13,"LLVMLShr","","",0,null],[13,"LLVMAShr","","",0,null],[13,"LLVMAnd","","",0,null],[13,"LLVMOr","","",0,null],[13,"LLVMXor","","",0,null],[13,"LLVMAlloca","","",0,null],[13,"LLVMLoad","","",0,null],[13,"LLVMStore","","",0,null],[13,"LLVMGetElementPtr","","",0,null],[13,"LLVMTrunc","","",0,null],[13,"LLVMZExt","","",0,null],[13,"LLVMSExt","","",0,null],[13,"LLVMFPToUI","","",0,null],[13,"LLVMFPToSI","","",0,null],[13,"LLVMUIToFP","","",0,null],[13,"LLVMSIToFP","","",0,null],[13,"LLVMFPTrunc","","",0,null],[13,"LLVMFPExt","","",0,null],[13,"LLVMPtrToInt","","",0,null],[13,"LLVMIntToPtr","","",0,null],[13,"LLVMBitCast","","",0,null],[13,"LLVMAddrSpaceCast","","",0,null],[13,"LLVMICmp","","",0,null],[13,"LLVMFCmp","","",0,null],[13,"LLVMPHI","","",0,null],[13,"LLVMCall","","",0,null],[13,"LLVMSelect","","",0,null],[13,"LLVMUserOp1","","",0,null],[13,"LLVMUserOp2","","",0,null],[13,"LLVMVAArg","","",0,null],[13,"LLVMExtractElement","","",0,null],[13,"LLVMInsertElement","","",0,null],[13,"LLVMShuffleVector","","",0,null],[13,"LLVMExtractValue","","",0,null],[13,"LLVMInsertValue","","",0,null],[13,"LLVMFence","","",0,null],[13,"LLVMAtomicCmpXchg","","",0,null],[13,"LLVMAtomicRMW","","",0,null],[13,"LLVMResume","","",0,null],[13,"LLVMLandingPad","","",0,null],[4,"LLVMTypeKind","","",null,null],[13,"LLVMVoidTypeKind","","",1,null],[13,"LLVMHalfTypeKind","","",1,null],[13,"LLVMFloatTypeKind","","",1,null],[13,"LLVMDoubleTypeKind","","",1,null],[13,"LLVMX86_FP80TypeKind","","",1,null],[13,"LLVMFP128TypeKind","","",1,null],[13,"LLVMPPC_FP128TypeKind","","",1,null],[13,"LLVMLabelTypeKind","","",1,null],[13,"LLVMIntegerTypeKind","","",1,null],[13,"LLVMFunctionTypeKind","","",1,null],[13,"LLVMStructTypeKind","","",1,null],[13,"LLVMArrayTypeKind","","",1,null],[13,"LLVMPointerTypeKind","","",1,null],[13,"LLVMVectorTypeKind","","",1,null],[13,"LLVMMetadataTypeKind","","",1,null],[13,"LLVMX86_MMXTypeKind","","",1,null],[4,"LLVMLinkage","","",null,null],[13,"LLVMExternalLinkage","","",2,null],[13,"LLVMAvailableExternallyLinkage","","",2,null],[13,"LLVMLinkOnceAnyLinkage","","",2,null],[13,"LLVMLinkOnceODRLinkage","","",2,null],[13,"LLVMLinkOnceODRAutoHideLinkage","","",2,null],[13,"LLVMWeakAnyLinkage","","",2,null],[13,"LLVMWeakODRLinkage","","",2,null],[13,"LLVMAppendingLinkage","","",2,null],[13,"LLVMInternalLinkage","","",2,null],[13,"LLVMPrivateLinkage","","",2,null],[13,"LLVMDLLImportLinkage","","",2,null],[13,"LLVMDLLExportLinkage","","",2,null],[13,"LLVMExternalWeakLinkage","","",2,null],[13,"LLVMGhostLinkage","","",2,null],[13,"LLVMCommonLinkage","","",2,null],[13,"LLVMLinkerPrivateLinkage","","",2,null],[13,"LLVMLinkerPrivateWeakLinkage","","",2,null],[4,"LLVMVisibility","","",null,null],[13,"LLVMDefaultVisibility","","",3,null],[13,"LLVMHiddenVisibility","","",3,null],[13,"LLVMProtectedVisibility","","",3,null],[4,"LLVMDLLStorageClass","","",null,null],[13,"LLVMDefaultStorageClass","","",4,null],[13,"LLVMDLLImportStorageClass","","",4,null],[13,"LLVMDLLExportStorageClass","","",4,null],[4,"LLVMCallConv","","",null,null],[13,"LLVMCCallConv","","",5,null],[13,"LLVMFastCallConv","","",5,null],[13,"LLVMColdCallConv","","",5,null],[13,"LLVMWebKitJSCallConv","","",5,null],[13,"LLVMAnyRegCallConv","","",5,null],[13,"LLVMX86StdcallCallConv","","",5,null],[13,"LLVMX86FastcallCallConv","","",5,null],[4,"LLVMIntPredicate","","",null,null],[13,"LLVMIntEQ","","",6,null],[13,"LLVMIntNE","","",6,null],[13,"LLVMIntUGT","","",6,null],[13,"LLVMIntUGE","","",6,null],[13,"LLVMIntULT","","",6,null],[13,"LLVMIntULE","","",6,null],[13,"LLVMIntSGT","","",6,null],[13,"LLVMIntSGE","","",6,null],[13,"LLVMIntSLT","","",6,null],[13,"LLVMIntSLE","","",6,null],[4,"LLVMRealPredicate","","",null,null],[13,"LLVMRealPredicateFalse","","",7,null],[13,"LLVMRealOEQ","","",7,null],[13,"LLVMRealOGT","","",7,null],[13,"LLVMRealOGE","","",7,null],[13,"LLVMRealOLT","","",7,null],[13,"LLVMRealOLE","","",7,null],[13,"LLVMRealONE","","",7,null],[13,"LLVMRealORD","","",7,null],[13,"LLVMRealUNO","","",7,null],[13,"LLVMRealUEQ","","",7,null],[13,"LLVMRealUGT","","",7,null],[13,"LLVMRealUGE","","",7,null],[13,"LLVMRealULT","","",7,null],[13,"LLVMRealULE","","",7,null],[13,"LLVMRealUNE","","",7,null],[13,"LLVMRealPredicateTrue","","",7,null],[4,"LLVMLandingPadClauseTy","","",null,null],[13,"LLVMLandingPadCatch","","",8,null],[13,"LLVMLandingPadFilter","","",8,null],[4,"LLVMThreadLocalMode","","",null,null],[13,"LLVMNotThreadLocal","","",9,null],[13,"LLVMGeneralDynamicTLSModel","","",9,null],[13,"LLVMLocalDynamicTLSModel","","",9,null],[13,"LLVMInitialExecTLSModel","","",9,null],[13,"LLVMLocalExecTLSModel","","",9,null],[4,"LLVMAtomicOrdering","","",null,null],[13,"LLVMAtomicOrderingNotAtomic","","",10,null],[13,"LLVMAtomicOrderingUnordered","","",10,null],[13,"LLVMAtomicOrderingMonotonic","","",10,null],[13,"LLVMAtomicOrderingAcquire","","",10,null],[13,"LLVMAtomicOrderingRelease","","",10,null],[13,"LLVMAtomicOrderingAcquireRelease","","",10,null],[13,"LLVMAtomicOrderingSequentiallyConsistent","","",10,null],[4,"LLVMAtomicRMWBinOp","","",null,null],[13,"LLVMAtomicRMWBinOpXchg","","",11,null],[13,"LLVMAtomicRMWBinOpAdd","","",11,null],[13,"LLVMAtomicRMWBinOpSub","","",11,null],[13,"LLVMAtomicRMWBinOpAnd","","",11,null],[13,"LLVMAtomicRMWBinOpNand","","",11,null],[13,"LLVMAtomicRMWBinOpOr","","",11,null],[13,"LLVMAtomicRMWBinOpXor","","",11,null],[13,"LLVMAtomicRMWBinOpMax","","",11,null],[13,"LLVMAtomicRMWBinOpMin","","",11,null],[13,"LLVMAtomicRMWBinOpUMax","","",11,null],[13,"LLVMAtomicRMWBinOpUMin","","",11,null],[4,"LLVMDiagnosticSeverity","","",null,null],[13,"LLVMDSError","","",12,null],[13,"LLVMDSWarning","","",12,null],[13,"LLVMDSRemark","","",12,null],[13,"LLVMDSNote","","",12,null],[0,"prelude","","Core types used throughout LLVM.",null,null],[6,"LLVMBool","llvm_sys::prelude","",null,null],[6,"LLVMMemoryBufferRef","","",null,null],[6,"LLVMContextRef","","",null,null],[6,"LLVMModuleRef","","",null,null],[6,"LLVMTypeRef","","",null,null],[6,"LLVMValueRef","","",null,null],[6,"LLVMBasicBlockRef","","",null,null],[6,"LLVMBuilderRef","","",null,null],[6,"LLVMModuleProviderRef","","",null,null],[6,"LLVMPassManagerRef","","",null,null],[6,"LLVMPassRegistryRef","","",null,null],[6,"LLVMUseRef","","",null,null],[6,"LLVMDiagnosticInfoRef","","",null,null],[0,"analysis","llvm_sys","Various analyses of the LLVM IR.",null,null],[4,"LLVMVerifierFailureAction","llvm_sys::analysis","",null,null],[13,"LLVMAbortProcessAction","","Print to stderr and abort the process.",13,null],[13,"LLVMPrintMessageAction","","Print to stderr and return 1.",13,null],[13,"LLVMReturnStatusAction","","Return 1 and print nothing.",13,null],[5,"LLVMVerifyModule","","Verify that a module is valid, taking the specified action if not.",null,null],[5,"LLVMVerifyFunction","","Verify that a single function is valid, taking the specified action.",null,null],[5,"LLVMViewFunctionCFG","","Open a ghostview window displaying the CFG of the given function.",null,null],[5,"LLVMViewFunctionCFGOnly","","",null,null],[0,"bit_reader","llvm_sys","Input of the LLVM bitcode format.",null,null],[5,"LLVMParseBitcode","llvm_sys::bit_reader","Build a module from the bitcode in the specified memory buffer.",null,null],[5,"LLVMParseBitcodeInContext","","",null,null],[5,"LLVMGetBitcodeModuleInContext","","Read a module from the specified path, returning a module provider\nperforming lazy deserialization.",null,null],[5,"LLVMGetBitcodeModule","","",null,null],[5,"LLVMGetBitcodeModuleProviderInContext","","Deprecated: use LLVMGetBitcodeModuleInContext instead",null,null],[5,"LLVMGetBitcodeModuleProvider","","Deprecated: Use LLVMGetBitcodeModule instead",null,null],[0,"bit_writer","llvm_sys","Output of the LLVM bitcode format.",null,null],[5,"LLVMWriteBitcodeToFile","llvm_sys::bit_writer","Write a module to the specified path.",null,null],[5,"LLVMWriteBitcodeToFD","","Write a module to an open file descriptor.",null,null],[5,"LLVMWriteBitcodeToFileHandle","","Deprecated: use LLVMWriteBitcodeToFD",null,null],[5,"LLVMWriteBitcodeToMemoryBuffer","","Writes a module to a new memory buffer.",null,null],[0,"core","llvm_sys","The LLVM intermediate representation.",null,null],[5,"LLVMInitializeCore","llvm_sys::core","",null,null],[5,"LLVMShutdown","","",null,null],[5,"LLVMCreateMessage","","",null,null],[5,"LLVMDisposeMessage","","",null,null],[5,"LLVMInstallFatalErrorHandler","","",null,null],[5,"LLVMResetFatalErrorHandler","","",null,null],[5,"LLVMEnablePrettyStackTrace","","",null,null],[5,"LLVMContextCreate","","",null,null],[5,"LLVMGetGlobalContext","","",null,null],[5,"LLVMContextSetDiagnosticHandler","","",null,null],[5,"LLVMContextSetYieldCallback","","",null,null],[5,"LLVMContextDispose","","",null,null],[5,"LLVMGetDiagInfoDescription","","",null,null],[5,"LLVMGetDiagInfoSeverity","","",null,null],[5,"LLVMGetMDKindIDInContext","","",null,null],[5,"LLVMGetMDKindID","","",null,null],[5,"LLVMModuleCreateWithName","","",null,null],[5,"LLVMModuleCreateWithNameInContext","","",null,null],[5,"LLVMCloneModule","","",null,null],[5,"LLVMDisposeModule","","",null,null],[5,"LLVMGetDataLayout","","",null,null],[5,"LLVMSetDataLayout","","",null,null],[5,"LLVMGetTarget","","",null,null],[5,"LLVMSetTarget","","",null,null],[5,"LLVMDumpModule","","",null,null],[5,"LLVMPrintModuleToFile","","",null,null],[5,"LLVMPrintModuleToString","","",null,null],[5,"LLVMSetModuleInlineAsm","","",null,null],[5,"LLVMGetModuleContext","","",null,null],[5,"LLVMGetTypeByName","","",null,null],[5,"LLVMGetNamedMetadataNumOperands","","",null,null],[5,"LLVMGetNamedMetadataOperands","","",null,null],[5,"LLVMAddNamedMetadataOperand","","",null,null],[5,"LLVMAddFunction","","",null,null],[5,"LLVMGetNamedFunction","","",null,null],[5,"LLVMGetFirstFunction","","",null,null],[5,"LLVMGetLastFunction","","",null,null],[5,"LLVMGetNextFunction","","",null,null],[5,"LLVMGetPreviousFunction","","",null,null],[5,"LLVMGetTypeKind","","",null,null],[5,"LLVMTypeIsSized","","",null,null],[5,"LLVMGetTypeContext","","",null,null],[5,"LLVMDumpType","","",null,null],[5,"LLVMPrintTypeToString","","",null,null],[5,"LLVMInt1TypeInContext","","",null,null],[5,"LLVMInt8TypeInContext","","",null,null],[5,"LLVMInt16TypeInContext","","",null,null],[5,"LLVMInt32TypeInContext","","",null,null],[5,"LLVMInt64TypeInContext","","",null,null],[5,"LLVMIntTypeInContext","","",null,null],[5,"LLVMInt1Type","","",null,null],[5,"LLVMInt8Type","","",null,null],[5,"LLVMInt16Type","","",null,null],[5,"LLVMInt32Type","","",null,null],[5,"LLVMInt64Type","","",null,null],[5,"LLVMIntType","","",null,null],[5,"LLVMGetIntTypeWidth","","",null,null],[5,"LLVMHalfTypeInContext","","",null,null],[5,"LLVMFloatTypeInContext","","",null,null],[5,"LLVMDoubleTypeInContext","","",null,null],[5,"LLVMX86FP80TypeInContext","","",null,null],[5,"LLVMFP128TypeInContext","","",null,null],[5,"LLVMPPCFP128TypeInContext","","",null,null],[5,"LLVMHalfType","","",null,null],[5,"LLVMFloatType","","",null,null],[5,"LLVMDoubleType","","",null,null],[5,"LLVMX86FP80Type","","",null,null],[5,"LLVMFP128Type","","",null,null],[5,"LLVMPPCFP128Type","","",null,null],[5,"LLVMFunctionType","","",null,null],[5,"LLVMIsFunctionVarArg","","",null,null],[5,"LLVMGetReturnType","","",null,null],[5,"LLVMCountParamTypes","","",null,null],[5,"LLVMGetParamTypes","","",null,null],[5,"LLVMStructTypeInContext","","",null,null],[5,"LLVMStructType","","",null,null],[5,"LLVMStructCreateNamed","","",null,null],[5,"LLVMGetStructName","","",null,null],[5,"LLVMStructSetBody","","",null,null],[5,"LLVMCountStructElementTypes","","",null,null],[5,"LLVMGetStructElementTypes","","",null,null],[5,"LLVMIsPackedStruct","","",null,null],[5,"LLVMIsOpaqueStruct","","",null,null],[5,"LLVMGetElementType","","",null,null],[5,"LLVMArrayType","","",null,null],[5,"LLVMGetArrayLength","","",null,null],[5,"LLVMPointerType","","",null,null],[5,"LLVMGetPointerAddressSpace","","",null,null],[5,"LLVMVectorType","","",null,null],[5,"LLVMGetVectorSize","","",null,null],[5,"LLVMVoidTypeInContext","","",null,null],[5,"LLVMLabelTypeInContext","","",null,null],[5,"LLVMX86MMXTypeInContext","","",null,null],[5,"LLVMVoidType","","",null,null],[5,"LLVMLabelType","","",null,null],[5,"LLVMX86MMXType","","",null,null],[5,"LLVMTypeOf","","",null,null],[5,"LLVMGetValueName","","",null,null],[5,"LLVMSetValueName","","",null,null],[5,"LLVMDumpValue","","",null,null],[5,"LLVMPrintValueToString","","",null,null],[5,"LLVMReplaceAllUsesWith","","",null,null],[5,"LLVMIsConstant","","",null,null],[5,"LLVMIsUndef","","",null,null],[5,"LLVMIsAMDNode","","",null,null],[5,"LLVMIsAMDString","","",null,null],[5,"LLVMGetFirstUse","","",null,null],[5,"LLVMGetNextUse","","",null,null],[5,"LLVMGetUser","","",null,null],[5,"LLVMGetUsedValue","","",null,null],[5,"LLVMGetOperand","","",null,null],[5,"LLVMGetOperandUse","","",null,null],[5,"LLVMSetOperand","","",null,null],[5,"LLVMGetNumOperands","","",null,null],[5,"LLVMConstNull","","",null,null],[5,"LLVMConstAllOnes","","",null,null],[5,"LLVMGetUndef","","",null,null],[5,"LLVMIsNull","","",null,null],[5,"LLVMConstPointerNull","","",null,null],[5,"LLVMConstInt","","",null,null],[5,"LLVMConstIntOfArbitraryPrecision","","",null,null],[5,"LLVMConstIntOfString","","",null,null],[5,"LLVMConstIntOfStringAndSize","","",null,null],[5,"LLVMConstReal","","",null,null],[5,"LLVMConstRealOfString","","",null,null],[5,"LLVMConstRealOfStringAndSize","","",null,null],[5,"LLVMConstIntGetZExtValue","","",null,null],[5,"LLVMConstIntGetSExtValue","","",null,null],[5,"LLVMConstRealGetDouble","","",null,null],[5,"LLVMConstStringInContext","","",null,null],[5,"LLVMConstString","","",null,null],[5,"LLVMIsConstantString","","",null,null],[5,"LLVMGetAsString","","",null,null],[5,"LLVMConstStructInContext","","",null,null],[5,"LLVMConstStruct","","",null,null],[5,"LLVMConstArray","","",null,null],[5,"LLVMConstNamedStruct","","",null,null],[5,"LLVMGetElementAsConstant","","",null,null],[5,"LLVMConstVector","","",null,null],[5,"LLVMGetConstOpcode","","",null,null],[5,"LLVMAlignOf","","",null,null],[5,"LLVMSizeOf","","",null,null],[5,"LLVMConstNeg","","",null,null],[5,"LLVMConstNSWNeg","","",null,null],[5,"LLVMConstNUWNeg","","",null,null],[5,"LLVMConstFNeg","","",null,null],[5,"LLVMConstNot","","",null,null],[5,"LLVMConstAdd","","",null,null],[5,"LLVMConstNSWAdd","","",null,null],[5,"LLVMConstNUWAdd","","",null,null],[5,"LLVMConstFAdd","","",null,null],[5,"LLVMConstSub","","",null,null],[5,"LLVMConstNSWSub","","",null,null],[5,"LLVMConstNUWSub","","",null,null],[5,"LLVMConstFSub","","",null,null],[5,"LLVMConstMul","","",null,null],[5,"LLVMConstNSWMul","","",null,null],[5,"LLVMConstNUWMul","","",null,null],[5,"LLVMConstFMul","","",null,null],[5,"LLVMConstUDiv","","",null,null],[5,"LLVMConstSDiv","","",null,null],[5,"LLVMConstExactSDiv","","",null,null],[5,"LLVMConstFDiv","","",null,null],[5,"LLVMConstURem","","",null,null],[5,"LLVMConstSRem","","",null,null],[5,"LLVMConstFRem","","",null,null],[5,"LLVMConstAnd","","",null,null],[5,"LLVMConstOr","","",null,null],[5,"LLVMConstXor","","",null,null],[5,"LLVMConstICmp","","",null,null],[5,"LLVMConstFCmp","","",null,null],[5,"LLVMConstShl","","",null,null],[5,"LLVMConstLShr","","",null,null],[5,"LLVMConstAShr","","",null,null],[5,"LLVMConstGEP","","",null,null],[5,"LLVMConstInBoundsGEP","","",null,null],[5,"LLVMConstTrunc","","",null,null],[5,"LLVMConstSExt","","",null,null],[5,"LLVMConstZExt","","",null,null],[5,"LLVMConstFPTrunc","","",null,null],[5,"LLVMConstFPExt","","",null,null],[5,"LLVMConstUIToFP","","",null,null],[5,"LLVMConstSIToFP","","",null,null],[5,"LLVMConstFPToUI","","",null,null],[5,"LLVMConstFPToSI","","",null,null],[5,"LLVMConstPtrToInt","","",null,null],[5,"LLVMConstIntToPtr","","",null,null],[5,"LLVMConstBitCast","","",null,null],[5,"LLVMConstAddrSpaceCast","","",null,null],[5,"LLVMConstZExtOrBitCast","","",null,null],[5,"LLVMConstSExtOrBitCast","","",null,null],[5,"LLVMConstTruncOrBitCast","","",null,null],[5,"LLVMConstPointerCast","","",null,null],[5,"LLVMConstIntCast","","",null,null],[5,"LLVMConstFPCast","","",null,null],[5,"LLVMConstSelect","","",null,null],[5,"LLVMConstExtractElement","","",null,null],[5,"LLVMConstInsertElement","","",null,null],[5,"LLVMConstShuffleVector","","",null,null],[5,"LLVMConstExtractValue","","",null,null],[5,"LLVMConstInsertValue","","",null,null],[5,"LLVMConstInlineAsm","","",null,null],[5,"LLVMBlockAddress","","",null,null],[5,"LLVMGetGlobalParent","","",null,null],[5,"LLVMIsDeclaration","","",null,null],[5,"LLVMGetLinkage","","",null,null],[5,"LLVMSetLinkage","","",null,null],[5,"LLVMGetSection","","",null,null],[5,"LLVMSetSection","","",null,null],[5,"LLVMGetVisibility","","",null,null],[5,"LLVMSetVisibility","","",null,null],[5,"LLVMGetDLLStorageClass","","",null,null],[5,"LLVMSetDLLStorageClass","","",null,null],[5,"LLVMHasUnnamedAddr","","",null,null],[5,"LLVMSetUnnamedAddr","","",null,null],[5,"LLVMGetAlignment","","",null,null],[5,"LLVMSetAlignment","","",null,null],[5,"LLVMAddGlobal","","",null,null],[5,"LLVMAddGlobalInAddressSpace","","",null,null],[5,"LLVMGetNamedGlobal","","",null,null],[5,"LLVMGetFirstGlobal","","",null,null],[5,"LLVMGetLastGlobal","","",null,null],[5,"LLVMGetNextGlobal","","",null,null],[5,"LLVMGetPreviousGlobal","","",null,null],[5,"LLVMDeleteGlobal","","",null,null],[5,"LLVMGetInitializer","","",null,null],[5,"LLVMSetInitializer","","",null,null],[5,"LLVMIsThreadLocal","","",null,null],[5,"LLVMSetThreadLocal","","",null,null],[5,"LLVMIsGlobalConstant","","",null,null],[5,"LLVMSetGlobalConstant","","",null,null],[5,"LLVMGetThreadLocalMode","","",null,null],[5,"LLVMSetThreadLocalMode","","",null,null],[5,"LLVMIsExternallyInitialized","","",null,null],[5,"LLVMSetExternallyInitialized","","",null,null],[5,"LLVMAddAlias","","",null,null],[5,"LLVMDeleteFunction","","",null,null],[5,"LLVMGetIntrinsicID","","",null,null],[5,"LLVMGetFunctionCallConv","","",null,null],[5,"LLVMSetFunctionCallConv","","",null,null],[5,"LLVMGetGC","","",null,null],[5,"LLVMSetGC","","",null,null],[5,"LLVMAddFunctionAttr","","",null,null],[5,"LLVMAddTargetDependentFunctionAttr","","",null,null],[5,"LLVMGetFunctionAttr","","",null,null],[5,"LLVMRemoveFunctionAttr","","",null,null],[5,"LLVMCountParams","","",null,null],[5,"LLVMGetParams","","",null,null],[5,"LLVMGetParam","","",null,null],[5,"LLVMGetParamParent","","",null,null],[5,"LLVMGetFirstParam","","",null,null],[5,"LLVMGetLastParam","","",null,null],[5,"LLVMGetNextParam","","",null,null],[5,"LLVMGetPreviousParam","","",null,null],[5,"LLVMAddAttribute","","",null,null],[5,"LLVMRemoveAttribute","","",null,null],[5,"LLVMGetAttribute","","",null,null],[5,"LLVMSetParamAlignment","","",null,null],[5,"LLVMMDStringInContext","","",null,null],[5,"LLVMMDString","","",null,null],[5,"LLVMMDNodeInContext","","",null,null],[5,"LLVMMDNode","","",null,null],[5,"LLVMGetMDString","","",null,null],[5,"LLVMGetMDNodeNumOperands","","",null,null],[5,"LLVMGetMDNodeOperands","","",null,null],[5,"LLVMBasicBlockAsValue","","",null,null],[5,"LLVMValueIsBasicBlock","","",null,null],[5,"LLVMValueAsBasicBlock","","",null,null],[5,"LLVMGetBasicBlockParent","","",null,null],[5,"LLVMGetBasicBlockTerminator","","",null,null],[5,"LLVMCountBasicBlocks","","",null,null],[5,"LLVMGetBasicBlocks","","",null,null],[5,"LLVMGetFirstBasicBlock","","",null,null],[5,"LLVMGetLastBasicBlock","","",null,null],[5,"LLVMGetNextBasicBlock","","",null,null],[5,"LLVMGetPreviousBasicBlock","","",null,null],[5,"LLVMGetEntryBasicBlock","","",null,null],[5,"LLVMAppendBasicBlockInContext","","",null,null],[5,"LLVMAppendBasicBlock","","",null,null],[5,"LLVMInsertBasicBlockInContext","","",null,null],[5,"LLVMInsertBasicBlock","","",null,null],[5,"LLVMDeleteBasicBlock","","",null,null],[5,"LLVMRemoveBasicBlockFromParent","","",null,null],[5,"LLVMMoveBasicBlockBefore","","",null,null],[5,"LLVMMoveBasicBlockAfter","","",null,null],[5,"LLVMGetFirstInstruction","","",null,null],[5,"LLVMGetLastInstruction","","",null,null],[5,"LLVMHasMetadata","","",null,null],[5,"LLVMGetMetadata","","",null,null],[5,"LLVMSetMetadata","","",null,null],[5,"LLVMGetInstructionParent","","",null,null],[5,"LLVMGetNextInstruction","","",null,null],[5,"LLVMGetPreviousInstruction","","",null,null],[5,"LLVMInstructionEraseFromParent","","",null,null],[5,"LLVMGetInstructionOpcode","","",null,null],[5,"LLVMGetICmpPredicate","","",null,null],[5,"LLVMGetFCmpPredicate","","",null,null],[5,"LLVMInstructionClone","","",null,null],[5,"LLVMSetInstructionCallConv","","",null,null],[5,"LLVMGetInstructionCallConv","","",null,null],[5,"LLVMAddInstrAttribute","","",null,null],[5,"LLVMRemoveInstrAttribute","","",null,null],[5,"LLVMSetInstrParamAlignment","","",null,null],[5,"LLVMIsTailCall","","",null,null],[5,"LLVMSetTailCall","","",null,null],[5,"LLVMGetNumSuccessors","","",null,null],[5,"LLVMGetSuccessor","","",null,null],[5,"LLVMSetSuccessor","","",null,null],[5,"LLVMIsConditional","","",null,null],[5,"LLVMGetCondition","","",null,null],[5,"LLVMSetCondition","","",null,null],[5,"LLVMGetSwitchDefaultDest","","",null,null],[5,"LLVMAddIncoming","","",null,null],[5,"LLVMCountIncoming","","",null,null],[5,"LLVMGetIncomingValue","","",null,null],[5,"LLVMGetIncomingBlock","","",null,null],[5,"LLVMIsAArgument","","",null,null],[5,"LLVMIsABasicBlock","","",null,null],[5,"LLVMIsAInlineAsm","","",null,null],[5,"LLVMIsAUser","","",null,null],[5,"LLVMIsAConstant","","",null,null],[5,"LLVMIsABlockAddress","","",null,null],[5,"LLVMIsAConstantAggregateZero","","",null,null],[5,"LLVMIsAConstantArray","","",null,null],[5,"LLVMIsAConstantDataSequential","","",null,null],[5,"LLVMIsAConstantDataArray","","",null,null],[5,"LLVMIsAConstantDataVector","","",null,null],[5,"LLVMIsAConstantExpr","","",null,null],[5,"LLVMIsAConstantFP","","",null,null],[5,"LLVMIsAConstantInt","","",null,null],[5,"LLVMIsAConstantPointerNull","","",null,null],[5,"LLVMIsAConstantStruct","","",null,null],[5,"LLVMIsAConstantVector","","",null,null],[5,"LLVMIsAGlobalValue","","",null,null],[5,"LLVMIsAGlobalAlias","","",null,null],[5,"LLVMIsAGlobalObject","","",null,null],[5,"LLVMIsAFunction","","",null,null],[5,"LLVMIsAGlobalVariable","","",null,null],[5,"LLVMIsAUndefValue","","",null,null],[5,"LLVMIsAInstruction","","",null,null],[5,"LLVMIsABinaryOperator","","",null,null],[5,"LLVMIsACallInst","","",null,null],[5,"LLVMIsAIntrinsicInst","","",null,null],[5,"LLVMIsADbgInfoIntrinsic","","",null,null],[5,"LLVMIsADbgDeclareInst","","",null,null],[5,"LLVMIsAMemIntrinsic","","",null,null],[5,"LLVMIsAMemCpyInst","","",null,null],[5,"LLVMIsAMemMoveInst","","",null,null],[5,"LLVMIsAMemSetInst","","",null,null],[5,"LLVMIsACmpInst","","",null,null],[5,"LLVMIsAFCmpInst","","",null,null],[5,"LLVMIsAICmpInst","","",null,null],[5,"LLVMIsAExtractElementInst","","",null,null],[5,"LLVMIsAGetElementPtrInst","","",null,null],[5,"LLVMIsAInsertElementInst","","",null,null],[5,"LLVMIsAInsertValueInst","","",null,null],[5,"LLVMIsALandingPadInst","","",null,null],[5,"LLVMIsAPHINode","","",null,null],[5,"LLVMIsASelectInst","","",null,null],[5,"LLVMIsAShuffleVectorInst","","",null,null],[5,"LLVMIsAStoreInst","","",null,null],[5,"LLVMIsATerminatorInst","","",null,null],[5,"LLVMIsABranchInst","","",null,null],[5,"LLVMIsAIndirectBrInst","","",null,null],[5,"LLVMIsAInvokeInst","","",null,null],[5,"LLVMIsAReturnInst","","",null,null],[5,"LLVMIsASwitchInst","","",null,null],[5,"LLVMIsAUnreachableInst","","",null,null],[5,"LLVMIsAResumeInst","","",null,null],[5,"LLVMIsAUnaryInstruction","","",null,null],[5,"LLVMIsAAllocaInst","","",null,null],[5,"LLVMIsACastInst","","",null,null],[5,"LLVMIsAAddrSpaceCastInst","","",null,null],[5,"LLVMIsABitCastInst","","",null,null],[5,"LLVMIsAFPExtInst","","",null,null],[5,"LLVMIsAFPToSIInst","","",null,null],[5,"LLVMIsAFPToUIInst","","",null,null],[5,"LLVMIsAFPTruncInst","","",null,null],[5,"LLVMIsAIntToPtrInst","","",null,null],[5,"LLVMIsAPtrToIntInst","","",null,null],[5,"LLVMIsASExtInst","","",null,null],[5,"LLVMIsASIToFPInst","","",null,null],[5,"LLVMIsATruncInst","","",null,null],[5,"LLVMIsAUIToFPInst","","",null,null],[5,"LLVMIsAZExtInst","","",null,null],[5,"LLVMIsAExtractValueInst","","",null,null],[5,"LLVMIsALoadInst","","",null,null],[5,"LLVMIsAVAArgInst","","",null,null],[5,"LLVMCreateBuilderInContext","","",null,null],[5,"LLVMCreateBuilder","","",null,null],[5,"LLVMPositionBuilder","","",null,null],[5,"LLVMPositionBuilderBefore","","",null,null],[5,"LLVMPositionBuilderAtEnd","","",null,null],[5,"LLVMGetInsertBlock","","",null,null],[5,"LLVMClearInsertionPosition","","",null,null],[5,"LLVMInsertIntoBuilder","","",null,null],[5,"LLVMInsertIntoBuilderWithName","","",null,null],[5,"LLVMDisposeBuilder","","",null,null],[5,"LLVMSetCurrentDebugLocation","","",null,null],[5,"LLVMGetCurrentDebugLocation","","",null,null],[5,"LLVMSetInstDebugLocation","","",null,null],[5,"LLVMBuildRetVoid","","",null,null],[5,"LLVMBuildRet","","",null,null],[5,"LLVMBuildAggregateRet","","",null,null],[5,"LLVMBuildBr","","",null,null],[5,"LLVMBuildCondBr","","",null,null],[5,"LLVMBuildSwitch","","",null,null],[5,"LLVMBuildIndirectBr","","",null,null],[5,"LLVMBuildInvoke","","",null,null],[5,"LLVMBuildLandingPad","","",null,null],[5,"LLVMBuildResume","","",null,null],[5,"LLVMBuildUnreachable","","",null,null],[5,"LLVMAddCase","","Add a case to a `switch` instruction",null,null],[5,"LLVMAddDestination","","Add a destination to an `indirectbr` instruction",null,null],[5,"LLVMAddClause","","Add a catch or filter clause to a `landingpad` instruction",null,null],[5,"LLVMSetCleanup","","Set the cleanup flag in a `landingpad` instruction.",null,null],[5,"LLVMBuildAdd","","",null,null],[5,"LLVMBuildNSWAdd","","",null,null],[5,"LLVMBuildNUWAdd","","",null,null],[5,"LLVMBuildFAdd","","",null,null],[5,"LLVMBuildSub","","",null,null],[5,"LLVMBuildNSWSub","","",null,null],[5,"LLVMBuildNUWSub","","",null,null],[5,"LLVMBuildFSub","","",null,null],[5,"LLVMBuildMul","","",null,null],[5,"LLVMBuildNSWMul","","",null,null],[5,"LLVMBuildNUWMul","","",null,null],[5,"LLVMBuildFMul","","",null,null],[5,"LLVMBuildUDiv","","",null,null],[5,"LLVMBuildSDiv","","",null,null],[5,"LLVMBuildExactSDiv","","",null,null],[5,"LLVMBuildFDiv","","",null,null],[5,"LLVMBuildURem","","",null,null],[5,"LLVMBuildSRem","","",null,null],[5,"LLVMBuildFRem","","",null,null],[5,"LLVMBuildShl","","",null,null],[5,"LLVMBuildLShr","","",null,null],[5,"LLVMBuildAShr","","",null,null],[5,"LLVMBuildAnd","","",null,null],[5,"LLVMBuildOr","","",null,null],[5,"LLVMBuildXor","","",null,null],[5,"LLVMBuildBinOp","","",null,null],[5,"LLVMBuildNeg","","",null,null],[5,"LLVMBuildNSWNeg","","",null,null],[5,"LLVMBuildNUWNeg","","",null,null],[5,"LLVMBuildFNeg","","",null,null],[5,"LLVMBuildNot","","",null,null],[5,"LLVMBuildMalloc","","",null,null],[5,"LLVMBuildArrayMalloc","","",null,null],[5,"LLVMBuildAlloca","","",null,null],[5,"LLVMBuildArrayAlloca","","",null,null],[5,"LLVMBuildFree","","",null,null],[5,"LLVMBuildLoad","","",null,null],[5,"LLVMBuildStore","","",null,null],[5,"LLVMBuildGEP","","",null,null],[5,"LLVMBuildInBoundsGEP","","",null,null],[5,"LLVMBuildStructGEP","","",null,null],[5,"LLVMBuildGlobalString","","",null,null],[5,"LLVMBuildGlobalStringPtr","","",null,null],[5,"LLVMGetVolatile","","",null,null],[5,"LLVMSetVolatile","","",null,null],[5,"LLVMBuildTrunc","","",null,null],[5,"LLVMBuildZExt","","",null,null],[5,"LLVMBuildSExt","","",null,null],[5,"LLVMBuildFPToUI","","",null,null],[5,"LLVMBuildFPToSI","","",null,null],[5,"LLVMBuildUIToFP","","",null,null],[5,"LLVMBuildSIToFP","","",null,null],[5,"LLVMBuildFPTrunc","","",null,null],[5,"LLVMBuildFPExt","","",null,null],[5,"LLVMBuildPtrToInt","","",null,null],[5,"LLVMBuildIntToPtr","","",null,null],[5,"LLVMBuildBitCast","","",null,null],[5,"LLVMBuildAddrSpaceCast","","",null,null],[5,"LLVMBuildZExtOrBitCast","","",null,null],[5,"LLVMBuildSExtOrBitCast","","",null,null],[5,"LLVMBuildTruncOrBitCast","","",null,null],[5,"LLVMBuildCast","","",null,null],[5,"LLVMBuildPointerCast","","",null,null],[5,"LLVMBuildIntCast","","",null,null],[5,"LLVMBuildFPCast","","",null,null],[5,"LLVMBuildICmp","","",null,null],[5,"LLVMBuildFCmp","","",null,null],[5,"LLVMBuildPhi","","",null,null],[5,"LLVMBuildCall","","",null,null],[5,"LLVMBuildSelect","","",null,null],[5,"LLVMBuildVAArg","","",null,null],[5,"LLVMBuildExtractElement","","",null,null],[5,"LLVMBuildInsertElement","","",null,null],[5,"LLVMBuildShuffleVector","","",null,null],[5,"LLVMBuildExtractValue","","",null,null],[5,"LLVMBuildInsertValue","","",null,null],[5,"LLVMBuildIsNull","","",null,null],[5,"LLVMBuildIsNotNull","","",null,null],[5,"LLVMBuildPtrDiff","","",null,null],[5,"LLVMBuildFence","","",null,null],[5,"LLVMBuildAtomicRMW","","",null,null],[5,"LLVMCreateModuleProviderForExistingModule","","",null,null],[5,"LLVMDisposeModuleProvider","","",null,null],[5,"LLVMCreateMemoryBufferWithContentsOfFile","","",null,null],[5,"LLVMCreateMemoryBufferWithSTDIN","","",null,null],[5,"LLVMCreateMemoryBufferWithMemoryRange","","",null,null],[5,"LLVMCreateMemoryBufferWithMemoryRangeCopy","","",null,null],[5,"LLVMGetBufferStart","","",null,null],[5,"LLVMGetBufferSize","","",null,null],[5,"LLVMDisposeMemoryBuffer","","",null,null],[5,"LLVMGetGlobalPassRegistry","","",null,null],[5,"LLVMCreatePassManager","","",null,null],[5,"LLVMCreateFunctionPassManagerForModule","","",null,null],[5,"LLVMCreateFunctionPassManager","","",null,null],[5,"LLVMRunPassManager","","",null,null],[5,"LLVMInitializeFunctionPassManager","","",null,null],[5,"LLVMRunFunctionPassManager","","",null,null],[5,"LLVMFinalizeFunctionPassManager","","",null,null],[5,"LLVMDisposePassManager","","",null,null],[5,"LLVMStartMultithreaded","","Deprecated: LLVM threading is configured at compile-time with `LLVM_ENABLE_THREADS`",null,null],[5,"LLVMStopMultithreaded","","Deprecated: LLVM threading is configured at compile-time with `LLVM_ENABLE_THREADS`",null,null],[5,"LLVMIsMultithreaded","","",null,null],[0,"disassembler","llvm_sys","A disassembler library.",null,null],[3,"LLVMOpaqueDisasmContext","llvm_sys::disassembler","",null,null],[3,"LLVMOpInfoSymbol1","","",null,null],[12,"Present","","1 if this symbol is present.",14,null],[12,"Name","","Symbol name if not NULL.",14,null],[12,"Value","","Symbol value if name is NULL.",14,null],[3,"Struct_LLVMOpInfo1","","",null,null],[12,"AddSymbol","","",15,null],[12,"SubtractSymbol","","",15,null],[12,"Value","","",15,null],[12,"VariantKind","","",15,null],[5,"LLVMCreateDisasm","","",null,null],[5,"LLVMCreateDisasmCPU","","",null,null],[5,"LLVMCreateDisasmCPUFeatures","","",null,null],[5,"LLVMSetDisasmOptions","","",null,null],[5,"LLVMDisasmDispose","","",null,null],[5,"LLVMDisasmInstruction","","",null,null],[6,"LLVMDisasmContextRef","","",null,null],[6,"LLVMOpInfoCallback","","",null,null],[6,"LLVMSymbolLookupCallback","","",null,null],[17,"LLVMDisassembler_VariantKind_None","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM_HI16","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM_LO16","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM64_PAGE","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM64_PAGEOFF","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM64_GOTPAGE","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM64_GOTPAGEOFF","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM64_TLVP","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM64_TLVOFF","","",null,null],[17,"LLVMDisassembler_ReferenceType_InOut_None","","No input reference type or no output reference type.",null,null],[17,"LLVMDisassembler_ReferenceType_In_Branch","","The input reference is from a branch instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_In_PCrel_Load","","The input reference is from a PC relative load instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_In_ARM64_ADRP","","The input reference is from an ARM64::ADRP instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_In_ARM64_ADDXri","","The input reference is from an ARM64::ADDXri instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_In_ARM64_LDRXui","","The input reference is from an ARM64::LDRXui instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_In_ARM64_LDRXl","","The input reference is from an ARM64::LDRXl instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_In_ARM64_ADR","","The input reference is from an ARM64::ADR instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_SymbolStub","","The output reference is to as symbol stub.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_LitPool_SymAddr","","The output reference is to a symbol address in a literal pool.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_LitPool_CstrAddr","","The output reference is to a cstring address in a literal pool.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_Objc_CFString_Ref","","The output reference is to a Objective-C CoreFoundation string.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_Objc_Message","","The output reference is to a Objective-C message.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_Objc_Message_Ref","","The output reference is to a Objective-C message ref.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_Objc_Selector_Ref","","The output reference is to a Objective-C selector ref.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_Objc_Class_Ref","","The output reference is to a Objective-C class ref.",null,null],[17,"LLVMDisassembler_ReferenceType_DeMangled_Name","","The output reference is to a C++ symbol name.",null,null],[17,"LLVMDisassembler_Option_UseMarkup","","The option to produce marked up assembly.",null,null],[17,"LLVMDisassembler_Option_PrintImmHex","","The option to print immediates as hex.",null,null],[17,"LLVMDisassembler_Option_AsmPrinterVariant","","The option use the other assembler printer variant",null,null],[17,"LLVMDisassembler_Option_SetInstrComments","","The option to set comment on instructions",null,null],[17,"LLVMDisassembler_Option_PrintLatency","","The option to print latency information alongside instructions",null,null],[0,"execution_engine","llvm_sys","Runtime code generation and execution.",null,null],[3,"LLVMOpaqueGenericValue","llvm_sys::execution_engine","",null,null],[3,"LLVMOpaqueExecutionEngine","","",null,null],[3,"LLVMOpaqueMCJITMemoryManager","","",null,null],[3,"LLVMMCJITCompilerOptions","","",null,null],[12,"OptLevel","","",16,null],[12,"CodeModel","","",16,null],[12,"NoFramePointerElim","","",16,null],[12,"EnableFastISel","","",16,null],[12,"MCJMM","","",16,null],[5,"LLVMLinkInMCJIT","","",null,null],[5,"LLVMLinkInInterpreter","","",null,null],[5,"LLVMCreateGenericValueOfInt","","",null,null],[5,"LLVMCreateGenericValueOfPointer","","",null,null],[5,"LLVMCreateGenericValueOfFloat","","",null,null],[5,"LLVMGenericValueIntWidth","","",null,null],[5,"LLVMGenericValueToInt","","",null,null],[5,"LLVMGenericValueToPointer","","",null,null],[5,"LLVMGenericValueToFloat","","",null,null],[5,"LLVMDisposeGenericValue","","",null,null],[5,"LLVMCreateExecutionEngineForModule","","",null,null],[5,"LLVMCreateInterpreterForModule","","",null,null],[5,"LLVMCreateJITCompilerForModule","","",null,null],[5,"LLVMInitializeMCJITCompilerOptions","","",null,null],[5,"LLVMCreateMCJITCompilerForModule","","Create an MCJIT execution engine for a module, with the given options.",null,null],[5,"LLVMCreateExecutionEngine","","Deprecated: Use LLVMCreateExecutionEngineForModule instead",null,null],[5,"LLVMCreateInterpreter","","Deprecated: Use LLVMCreateInterpreterForModule instead",null,null],[5,"LLVMCreateJITCompiler","","Deprecated: Use LLVMCreateJITCompilerForModule instead",null,null],[5,"LLVMDisposeExecutionEngine","","",null,null],[5,"LLVMRunStaticConstructors","","",null,null],[5,"LLVMRunStaticDestructors","","",null,null],[5,"LLVMRunFunctionAsMain","","",null,null],[5,"LLVMRunFunction","","",null,null],[5,"LLVMFreeMachineCodeForFunction","","",null,null],[5,"LLVMAddModule","","",null,null],[5,"LLVMAddModuleProvider","","",null,null],[5,"LLVMRemoveModule","","",null,null],[5,"LLVMRemoveModuleProvider","","Deprecated: Use LLVMRemoveModule instead",null,null],[5,"LLVMFindFunction","","",null,null],[5,"LLVMRecompileAndRelinkFunction","","",null,null],[5,"LLVMGetExecutionEngineTargetData","","",null,null],[5,"LLVMGetExecutionEngineTargetMachine","","",null,null],[5,"LLVMAddGlobalMapping","","",null,null],[5,"LLVMGetPointerToGlobal","","",null,null],[5,"LLVMGetGlobalValueAddress","","",null,null],[5,"LLVMGetFunctionAddress","","",null,null],[5,"LLVMCreateSimpleMCJITMemoryManager","","Create a simple custom MCJIT memory manager.",null,null],[5,"LLVMDisposeMCJITMemoryManager","","",null,null],[6,"LLVMGenericValueRef","","",null,null],[6,"LLVMExecutionEngineRef","","",null,null],[6,"LLVMMCJITMemoryManagerRef","","",null,null],[6,"LLVMMemoryManagerAllocateCodeSectionCallback","","",null,null],[6,"LLVMMemoryManagerAllocateDataSectionCallback","","",null,null],[6,"LLVMMemoryManagerFinalizeMemoryCallback","","",null,null],[6,"LLVMMemoryManagerDestroyCallback","","",null,null],[11,"clone","","",16,{"inputs":[{"name":"llvmmcjitcompileroptions"}],"output":{"name":"llvmmcjitcompileroptions"}}],[0,"initialization","llvm_sys","Initialization routines which must be called before using library features.",null,null],[5,"LLVMInitializeCore","llvm_sys::initialization","",null,null],[5,"LLVMInitializeTransformUtils","","",null,null],[5,"LLVMInitializeScalarOpts","","",null,null],[5,"LLVMInitializeObjCARCOpts","","",null,null],[5,"LLVMInitializeVectorization","","",null,null],[5,"LLVMInitializeInstCombine","","",null,null],[5,"LLVMInitializeIPO","","",null,null],[5,"LLVMInitializeInstrumentation","","",null,null],[5,"LLVMInitializeAnalysis","","",null,null],[5,"LLVMInitializeIPA","","",null,null],[5,"LLVMInitializeCodeGen","","",null,null],[5,"LLVMInitializeTarget","","",null,null],[0,"ir_reader","llvm_sys","The IR reader",null,null],[5,"LLVMParseIRInContext","llvm_sys::ir_reader","Read LLVM IR from a memory buffer and convert it to an in-memory Module.",null,null],[0,"link_time_optimizer","llvm_sys","Link-time-optimization",null,null],[4,"llvm_lto_status_t","llvm_sys::link_time_optimizer","",null,null],[13,"LLVM_LTO_UNKNOWN","","",17,null],[13,"LLVM_LTO_OPT_SUCCESS","","",17,null],[13,"LLVM_LTO_READ_SUCCESS","","",17,null],[13,"LLVM_LTO_READ_FAILURE","","",17,null],[13,"LLVM_LTO_WRITE_FAILURE","","",17,null],[13,"LLVM_LTO_NO_TARGET","","",17,null],[13,"LLVM_LTO_NO_WORK","","",17,null],[13,"LLVM_LTO_MODULE_MERGE_FAILURE","","",17,null],[13,"LLVM_LTO_ASM_FAILURE","","",17,null],[13,"LLVM_LTO_NULL_OBJECT","","",17,null],[5,"llvm_create_optimizer","","",null,null],[5,"llvm_destroy_optimizer","","",null,null],[5,"llvm_read_object_file","","",null,null],[5,"llvm_optimize_modules","","",null,null],[6,"llvm_lto_t","","Dummy type for pointers to the LTO object",null,null],[0,"linker","llvm_sys","The module/file/archive linker",null,null],[4,"LLVMLinkerMode","llvm_sys::linker","",null,null],[13,"LLVMLinkerDestroySource","","",18,null],[13,"LLVMLinkerPreserveSource","","",18,null],[5,"LLVMLinkModules","","Link the source module into the destination.",null,null],[0,"lto","llvm_sys","Abstract link time optimization.",null,null],[3,"LLVMOpaqueLTOModule","llvm_sys::lto","",null,null],[3,"LLVMOpaqueLTOCodeGenerator","","",null,null],[4,"lto_symbol_attributes","","",null,null],[13,"LTO_SYMBOL_ALIGNMENT_MASK","","",19,null],[13,"LTO_SYMBOL_PERMISSIONS_MASK","","",19,null],[13,"LTO_SYMBOL_PERMISSIONS_CODE","","",19,null],[13,"LTO_SYMBOL_PERMISSIONS_DATA","","",19,null],[13,"LTO_SYMBOL_PERMISSIONS_RODATA","","",19,null],[13,"LTO_SYMBOL_DEFINITION_MASK","","",19,null],[13,"LTO_SYMBOL_DEFINITION_REGULAR","","",19,null],[13,"LTO_SYMBOL_DEFINITION_TENTATIVE","","",19,null],[13,"LTO_SYMBOL_DEFINITION_WEAK","","",19,null],[13,"LTO_SYMBOL_DEFINITION_UNDEFINED","","",19,null],[13,"LTO_SYMBOL_DEFINITION_WEAKUNDEF","","",19,null],[13,"LTO_SYMBOL_SCOPE_MASK","","",19,null],[13,"LTO_SYMBOL_SCOPE_INTERNAL","","",19,null],[13,"LTO_SYMBOL_SCOPE_HIDDEN","","",19,null],[13,"LTO_SYMBOL_SCOPE_PROTECTED","","",19,null],[13,"LTO_SYMBOL_SCOPE_DEFAULT","","",19,null],[13,"LTO_SYMBOL_SCOPE_DEFAULT_CAN_BE_HIDDEN","","",19,null],[4,"lto_debug_model","","",null,null],[13,"LTO_DEBUG_MODEL_NONE","","",20,null],[13,"LTO_DEBUG_MODEL_DWARF","","",20,null],[4,"lto_codegen_model","","",null,null],[13,"LTO_CODEGEN_PIC_MODEL_STATIC","","",21,null],[13,"LTO_CODEGEN_PIC_MODEL_DYNAMIC","","",21,null],[13,"LTO_CODEGEN_PIC_MODEL_DYNAMIC_NO_PIC","","",21,null],[13,"LTO_CODEGEN_PIC_MODEL_DEFAULT","","",21,null],[4,"lto_codegen_diagnostic_severity_t","","",null,null],[13,"LTO_DS_ERROR","","",22,null],[13,"LTO_DS_WARNING","","",22,null],[13,"LTO_DS_REMARK","","",22,null],[13,"LTO_DS_NOTE","","",22,null],[5,"lto_get_version","","",null,null],[5,"lto_get_error_message","","",null,null],[5,"lto_module_is_object_file","","",null,null],[5,"lto_module_is_object_file_for_target","","",null,null],[5,"lto_module_is_object_file_in_memory","","",null,null],[5,"lto_module_is_object_file_in_memory_for_target","","",null,null],[5,"lto_module_create","","",null,null],[5,"lto_module_create_from_memory","","",null,null],[5,"lto_module_create_from_memory_with_path","","",null,null],[5,"lto_module_create_in_local_context","","",null,null],[5,"lto_module_create_in_codegen_context","","",null,null],[5,"lto_module_create_from_fd","","",null,null],[5,"lto_module_create_from_fd_at_offset","","",null,null],[5,"lto_module_dispose","","",null,null],[5,"lto_module_get_target_triple","","",null,null],[5,"lto_module_set_target_triple","","",null,null],[5,"lto_module_get_num_symbols","","",null,null],[5,"lto_module_get_symbol_name","","",null,null],[5,"lto_module_get_symbol_attribute","","",null,null],[5,"lto_module_get_num_deplibs","","",null,null],[5,"lto_module_get_deplib","","",null,null],[5,"lto_module_get_num_linkeropts","","",null,null],[5,"lto_module_get_linkeropt","","",null,null],[5,"lto_codegen_set_diagnostic_handler","","",null,null],[5,"lto_codegen_create","","",null,null],[5,"lto_codegen_create_in_local_context","","",null,null],[5,"lto_codegen_dispose","","",null,null],[5,"lto_codegen_add_module","","",null,null],[5,"lto_codegen_set_debug_model","","",null,null],[5,"lto_codegen_set_pic_model","","",null,null],[5,"lto_codegen_set_cpu","","",null,null],[5,"lto_codegen_set_assembler_path","","",null,null],[5,"lto_codegen_set_assembler_args","","",null,null],[5,"lto_codegen_add_must_preserve_symbol","","",null,null],[5,"lto_codegen_write_merged_modules","","",null,null],[5,"lto_codegen_compile","","",null,null],[5,"lto_codegen_compile_to_file","","",null,null],[5,"lto_codegen_debug_options","","",null,null],[5,"lto_initialize_disassembler","","",null,null],[6,"lto_bool_t","","",null,null],[6,"lto_module_t","","",null,null],[6,"lto_code_gen_t","","",null,null],[6,"lto_diagnostic_handler_t","","",null,null],[0,"object","llvm_sys","Object file reading and writing",null,null],[3,"LLVMOpaqueObjectFile","llvm_sys::object","",null,null],[3,"LLVMOpaqueSectionIterator","","",null,null],[3,"LLVMOpaqueSymbolIterator","","",null,null],[3,"LLVMOpaqueRelocationIterator","","",null,null],[5,"LLVMCreateObjectFile","","",null,null],[5,"LLVMDisposeObjectFile","","",null,null],[5,"LLVMGetSections","","",null,null],[5,"LLVMDisposeSectionIterator","","",null,null],[5,"LLVMIsSectionIteratorAtEnd","","",null,null],[5,"LLVMMoveToNextSection","","",null,null],[5,"LLVMMoveToContainingSection","","",null,null],[5,"LLVMGetSymbols","","",null,null],[5,"LLVMDisposeSymbolIterator","","",null,null],[5,"LLVMIsSymbolIteratorAtEnd","","",null,null],[5,"LLVMMoveToNextSymbol","","",null,null],[5,"LLVMGetSectionName","","",null,null],[5,"LLVMGetSectionSize","","",null,null],[5,"LLVMGetSectionContents","","",null,null],[5,"LLVMGetSectionAddress","","",null,null],[5,"LLVMGetSectionContainsSymbol","","",null,null],[5,"LLVMGetRelocations","","",null,null],[5,"LLVMDisposeRelocationIterator","","",null,null],[5,"LLVMIsRelocationIteratorAtEnd","","",null,null],[5,"LLVMMoveToNextRelocation","","",null,null],[5,"LLVMGetSymbolName","","",null,null],[5,"LLVMGetSymbolAddress","","",null,null],[5,"LLVMGetSymbolSize","","",null,null],[5,"LLVMGetRelocationAddress","","",null,null],[5,"LLVMGetRelocationOffset","","",null,null],[5,"LLVMGetRelocationSymbol","","",null,null],[5,"LLVMGetRelocationType","","",null,null],[5,"LLVMGetRelocationTypeName","","",null,null],[5,"LLVMGetRelocationValueString","","",null,null],[6,"LLVMObjectFileRef","","",null,null],[6,"LLVMSectionIteratorRef","","",null,null],[6,"LLVMSymbolIteratorRef","","",null,null],[6,"LLVMRelocationIteratorRef","","",null,null],[0,"target","llvm_sys","Target information",null,null],[3,"LLVMOpaqueTargetData","llvm_sys::target","",null,null],[3,"LLVMOpaqueTargetLibraryInfotData","","",null,null],[4,"LLVMByteOrdering","","",null,null],[13,"LLVMBigEndian","","",23,null],[13,"LLVMLittleEndian","","",23,null],[5,"LLVMInitializeR600TargetInfo","","",null,null],[5,"LLVMInitializeSystemZTargetInfo","","",null,null],[5,"LLVMInitializeHexagonTargetInfo","","",null,null],[5,"LLVMInitializeNVPTXTargetInfo","","",null,null],[5,"LLVMInitializeCppBackendTargetInfo","","",null,null],[5,"LLVMInitializeMSP430TargetInfo","","",null,null],[5,"LLVMInitializeXCoreTargetInfo","","",null,null],[5,"LLVMInitializeMipsTargetInfo","","",null,null],[5,"LLVMInitializeAArch64TargetInfo","","",null,null],[5,"LLVMInitializeARMTargetInfo","","",null,null],[5,"LLVMInitializePowerPCTargetInfo","","",null,null],[5,"LLVMInitializeSparcTargetInfo","","",null,null],[5,"LLVMInitializeX86TargetInfo","","",null,null],[5,"LLVMInitializeR600Target","","",null,null],[5,"LLVMInitializeSystemZTarget","","",null,null],[5,"LLVMInitializeHexagonTarget","","",null,null],[5,"LLVMInitializeNVPTXTarget","","",null,null],[5,"LLVMInitializeCppBackendTarget","","",null,null],[5,"LLVMInitializeMSP430Target","","",null,null],[5,"LLVMInitializeXCoreTarget","","",null,null],[5,"LLVMInitializeMipsTarget","","",null,null],[5,"LLVMInitializeAArch64Target","","",null,null],[5,"LLVMInitializeARMTarget","","",null,null],[5,"LLVMInitializePowerPCTarget","","",null,null],[5,"LLVMInitializeSparcTarget","","",null,null],[5,"LLVMInitializeX86Target","","",null,null],[5,"LLVMInitializeR600TargetMC","","",null,null],[5,"LLVMInitializeSystemZTargetMC","","",null,null],[5,"LLVMInitializeHexagonTargetMC","","",null,null],[5,"LLVMInitializeNVPTXTargetMC","","",null,null],[5,"LLVMInitializeCppBackendTargetMC","","",null,null],[5,"LLVMInitializeMSP430TargetMC","","",null,null],[5,"LLVMInitializeXCoreTargetMC","","",null,null],[5,"LLVMInitializeMipsTargetMC","","",null,null],[5,"LLVMInitializeAArch64TargetMC","","",null,null],[5,"LLVMInitializeARMTargetMC","","",null,null],[5,"LLVMInitializePowerPCTargetMC","","",null,null],[5,"LLVMInitializeSparcTargetMC","","",null,null],[5,"LLVMInitializeX86TargetMC","","",null,null],[5,"LLVMInitializeR600AsmPrinter","","",null,null],[5,"LLVMInitializeSystemZAsmPrinter","","",null,null],[5,"LLVMInitializeHexagonAsmPrinter","","",null,null],[5,"LLVMInitializeNVPTXAsmPrinter","","",null,null],[5,"LLVMInitializeMSP430AsmPrinter","","",null,null],[5,"LLVMInitializeXCoreAsmPrinter","","",null,null],[5,"LLVMInitializeMipsAsmPrinter","","",null,null],[5,"LLVMInitializeAArch64AsmPrinter","","",null,null],[5,"LLVMInitializeARMAsmPrinter","","",null,null],[5,"LLVMInitializePowerPCAsmPrinter","","",null,null],[5,"LLVMInitializeSparcAsmPrinter","","",null,null],[5,"LLVMInitializeX86AsmPrinter","","",null,null],[5,"LLVMInitializeR600AsmParser","","",null,null],[5,"LLVMInitializeSystemZAsmParser","","",null,null],[5,"LLVMInitializeMipsAsmParser","","",null,null],[5,"LLVMInitializeAArch64AsmParser","","",null,null],[5,"LLVMInitializeARMAsmParser","","",null,null],[5,"LLVMInitializePowerPCAsmParser","","",null,null],[5,"LLVMInitializeSparcAsmParser","","",null,null],[5,"LLVMInitializeX86AsmParser","","",null,null],[5,"LLVMInitializeSystemZDisassembler","","",null,null],[5,"LLVMInitializeHexagonDisassembler","","",null,null],[5,"LLVMInitializeXCoreDisassembler","","",null,null],[5,"LLVMInitializeMipsDisassembler","","",null,null],[5,"LLVMInitializeAArch64Disassembler","","",null,null],[5,"LLVMInitializeARMDisassembler","","",null,null],[5,"LLVMInitializePowerPCDisassembler","","",null,null],[5,"LLVMInitializeSparcDisassembler","","",null,null],[5,"LLVMInitializeX86Disassembler","","",null,null],[5,"LLVMCreateTargetData","","",null,null],[5,"LLVMAddTargetData","","",null,null],[5,"LLVMAddTargetLibraryInfo","","",null,null],[5,"LLVMCopyStringRepOfTargetData","","",null,null],[5,"LLVMByteOrder","","",null,null],[5,"LLVMPointerSize","","",null,null],[5,"LLVMPointerSizeForAS","","",null,null],[5,"LLVMIntPtrType","","",null,null],[5,"LLVMIntPtrTypeForAS","","",null,null],[5,"LLVMIntPtrTypeInContext","","",null,null],[5,"LLVMIntPtrTypeForASInContext","","",null,null],[5,"LLVMSizeOfTypeInBits","","",null,null],[5,"LLVMStoreSizeOfType","","",null,null],[5,"LLVMABISizeOfType","","",null,null],[5,"LLVMABIAlignmentOfType","","",null,null],[5,"LLVMCallFrameAlignmentOfType","","",null,null],[5,"LLVMPreferredAlignmentOfType","","",null,null],[5,"LLVMPreferredAlignmentOfGlobal","","",null,null],[5,"LLVMElementAtOffset","","",null,null],[5,"LLVMOffsetOfElement","","",null,null],[5,"LLVMDisposeTargetData","","",null,null],[5,"LLVM_InitializeAllTargetInfos","","",null,null],[5,"LLVM_InitializeAllTargets","","",null,null],[5,"LLVM_InitializeAllTargetMCs","","",null,null],[5,"LLVM_InitializeAllAsmPrinters","","",null,null],[5,"LLVM_InitializeAllAsmParsers","","",null,null],[5,"LLVM_InitializeAllDisassemblers","","",null,null],[5,"LLVM_InitializeNativeTarget","","Returns 1 on failure.",null,null],[5,"LLVM_InitializeNativeAsmParser","","Returns 1 on failure.",null,null],[5,"LLVM_InitializeNativeAsmPrinter","","Returns 1 on failure.",null,null],[5,"LLVM_InitializeNativeDisassembler","","Returns 1 on failure.",null,null],[6,"LLVMTargetDataRef","","",null,null],[6,"LLVMTargetLibraryInfoRef","","",null,null],[0,"support","llvm_sys","",null,null],[5,"LLVMLoadLibraryPermanently","llvm_sys::support","",null,null],[5,"LLVMParseCommandLineOptions","","",null,null],[0,"target_machine","llvm_sys","Target machine information, to generate assembly or object files.",null,null],[3,"LLVMOpaqueTargetMachine","llvm_sys::target_machine","",null,null],[3,"LLVMTarget","","",null,null],[4,"LLVMCodeGenOptLevel","","",null,null],[13,"LLVMCodeGenLevelNone","","",24,null],[13,"LLVMCodeGenLevelLess","","",24,null],[13,"LLVMCodeGenLevelDefault","","",24,null],[13,"LLVMCodeGenLevelAggressive","","",24,null],[4,"LLVMRelocMode","","",null,null],[13,"LLVMRelocDefault","","",25,null],[13,"LLVMRelocStatic","","",25,null],[13,"LLVMRelocPIC","","",25,null],[13,"LLVMRelocDynamicNoPic","","",25,null],[4,"LLVMCodeModel","","",null,null],[13,"LLVMCodeModelDefault","","",26,null],[13,"LLVMCodeModelJITDefault","","",26,null],[13,"LLVMCodeModelSmall","","",26,null],[13,"LLVMCodeModelKernel","","",26,null],[13,"LLVMCodeModelMedium","","",26,null],[13,"LLVMCodeModelLarge","","",26,null],[4,"LLVMCodeGenFileType","","",null,null],[13,"LLVMAssemblyFile","","",27,null],[13,"LLVMObjectFile","","",27,null],[5,"LLVMGetFirstTarget","","",null,null],[5,"LLVMGetNextTarget","","",null,null],[5,"LLVMGetTargetFromName","","",null,null],[5,"LLVMGetTargetFromTriple","","",null,null],[5,"LLVMGetTargetName","","",null,null],[5,"LLVMGetTargetDescription","","",null,null],[5,"LLVMTargetHasJIT","","",null,null],[5,"LLVMTargetHasTargetMachine","","",null,null],[5,"LLVMTargetHasAsmBackend","","",null,null],[5,"LLVMCreateTargetMachine","","",null,null],[5,"LLVMDisposeTargetMachine","","",null,null],[5,"LLVMGetTargetMachineTarget","","",null,null],[5,"LLVMGetTargetMachineTriple","","",null,null],[5,"LLVMGetTargetMachineCPU","","",null,null],[5,"LLVMGetTargetMachineFeatureString","","",null,null],[5,"LLVMGetTargetMachineData","","",null,null],[5,"LLVMSetTargetMachineAsmVerbosity","","",null,null],[5,"LLVMTargetMachineEmitToFile","","",null,null],[5,"LLVMTargetMachineEmitToMemoryBuffer","","",null,null],[5,"LLVMGetDefaultTargetTriple","","",null,null],[5,"LLVMAddAnalysisPasses","","",null,null],[6,"LLVMTargetMachineRef","","",null,null],[6,"LLVMTargetRef","","",null,null],[11,"clone","","",26,{"inputs":[{"name":"llvmcodemodel"}],"output":{"name":"llvmcodemodel"}}],[0,"transforms","llvm_sys","",null,null],[0,"ipo","llvm_sys::transforms","Interprocedural transformations of LLVM IR.",null,null],[5,"LLVMAddArgumentPromotionPass","llvm_sys::transforms::ipo","",null,null],[5,"LLVMAddConstantMergePass","","",null,null],[5,"LLVMAddDeadArgEliminationPass","","",null,null],[5,"LLVMAddFunctionAttrsPass","","",null,null],[5,"LLVMAddFunctionInliningPass","","",null,null],[5,"LLVMAddAlwaysInlinerPass","","",null,null],[5,"LLVMAddGlobalDCEPass","","",null,null],[5,"LLVMAddGlobalOptimizerPass","","",null,null],[5,"LLVMAddIPConstantPropagationPass","","",null,null],[5,"LLVMAddPruneEHPass","","",null,null],[5,"LLVMAddIPSCCPPass","","",null,null],[5,"LLVMAddInternalizePass","","",null,null],[5,"LLVMAddStripDeadPrototypesPass","","",null,null],[5,"LLVMAddStripSymbolsPass","","",null,null],[0,"pass_manager_builder","llvm_sys::transforms","",null,null],[3,"LLVMOpaquePassManagerBuilder","llvm_sys::transforms::pass_manager_builder","",null,null],[5,"LLVMPassManagerBuilderCreate","","",null,null],[5,"LLVMPassManagerBuilderDispose","","",null,null],[5,"LLVMPassManagerBuilderSetOptLevel","","",null,null],[5,"LLVMPassManagerBuilderSetSizeLevel","","",null,null],[5,"LLVMPassManagerBuilderSetDisableUnitAtATime","","",null,null],[5,"LLVMPassManagerBuilderSetDisableUnrollLoops","","",null,null],[5,"LLVMPassManagerBuilderSetDisableSimplifyLibCalls","","",null,null],[5,"LLVMPassManagerBuilderUseInlinerWithThreshold","","",null,null],[5,"LLVMPassManagerBuilderPopulateFunctionPassManager","","",null,null],[5,"LLVMPassManagerBuilderPopulateModulePassManager","","",null,null],[5,"LLVMPassManagerBuilderPopulateLTOPassManager","","",null,null],[6,"LLVMPassManagerBuilderRef","","",null,null],[0,"scalar","llvm_sys::transforms","Scalar transformations of LLVM IR.",null,null],[5,"LLVMAddAggressiveDCEPass","llvm_sys::transforms::scalar","",null,null],[5,"LLVMAddAlignmentFromAssumptionsPass","","",null,null],[5,"LLVMAddCFGSimplificationPass","","",null,null],[5,"LLVMAddDeadStoreEliminationPass","","",null,null],[5,"LLVMAddScalarizerPass","","",null,null],[5,"LLVMAddMergedLoadStoreMotionPass","","",null,null],[5,"LLVMAddGVNPass","","",null,null],[5,"LLVMAddIndVarSimplifyPass","","",null,null],[5,"LLVMAddInstructionCombiningPass","","",null,null],[5,"LLVMAddJumpThreadingPass","","",null,null],[5,"LLVMAddLICMPass","","",null,null],[5,"LLVMAddLoopDeletionPass","","",null,null],[5,"LLVMAddLoopIdiomPass","","",null,null],[5,"LLVMAddLoopRotatePass","","",null,null],[5,"LLVMAddLoopRerollPass","","",null,null],[5,"LLVMAddLoopUnrollPass","","",null,null],[5,"LLVMAddLoopUnswitchPass","","",null,null],[5,"LLVMAddMemCpyOptPass","","",null,null],[5,"LLVMAddPartiallyInlineLibCallsPass","","",null,null],[5,"LLVMAddLowerSwitchPass","","",null,null],[5,"LLVMAddPromoteMemoryToRegisterPass","","",null,null],[5,"LLVMAddReassociatePass","","",null,null],[5,"LLVMAddSCCPPass","","",null,null],[5,"LLVMAddScalarReplAggregatesPass","","",null,null],[5,"LLVMAddScalarReplAggregatesPassSSA","","",null,null],[5,"LLVMAddScalarReplAggregatesPassWithThreshold","","",null,null],[5,"LLVMAddSimplifyLibCallsPass","","",null,null],[5,"LLVMAddTailCallEliminationPass","","",null,null],[5,"LLVMAddConstantPropagationPass","","",null,null],[5,"LLVMAddDemoteMemoryToRegisterPass","","",null,null],[5,"LLVMAddVerifierPass","","",null,null],[5,"LLVMAddCorrelatedValuePropagationPass","","",null,null],[5,"LLVMAddEarlyCSEPass","","",null,null],[5,"LLVMAddLowerExpectIntrinsicPass","","",null,null],[5,"LLVMAddTypeBasedAliasAnalysisPass","","",null,null],[5,"LLVMAddScopedNoAliasAAPass","","",null,null],[5,"LLVMAddBasicAliasAnalysisPass","","",null,null],[0,"vectorize","llvm_sys::transforms","Vectorization transformations of LLVM IR.",null,null],[5,"LLVMAddBBVectorizePass","llvm_sys::transforms::vectorize","",null,null],[5,"LLVMAddLoopVectorizePass","","",null,null],[5,"LLVMAddSLPVectorizePass","","",null,null],[6,"LLVMFatalErrorHandler","llvm_sys","",null,null],[6,"LLVMDiagnosticHandler","","",null,null],[6,"LLVMYieldCallback","","",null,null],[17,"LLVMZExtAttribute","","",null,null],[17,"LLVMSExtAttribute","","",null,null],[17,"LLVMNoReturnAttribute","","",null,null],[17,"LLVMInRegAttribute","","",null,null],[17,"LLVMStructRetAttribute","","",null,null],[17,"LLVMNoUnwindAttribute","","",null,null],[17,"LLVMNoAliasAttribute","","",null,null],[17,"LLVMByValAttribute","","",null,null],[17,"LLVMNestAttribute","","",null,null],[17,"LLVMReadNoneAttribute","","",null,null],[17,"LLVMReadOnlyAttribute","","",null,null],[17,"LLVMNoInlineAttribute","","",null,null],[17,"LLVMAlwaysInlineAttribute","","",null,null],[17,"LLVMOptimizeForSizeAttribute","","",null,null],[17,"LLVMStackProtectAttribute","","",null,null],[17,"LLVMStackProtectReqAttribute","","",null,null],[17,"LLVMAlignment","","",null,null],[17,"LLVMNoCaptureAttribute","","",null,null],[17,"LLVMNoRedZoneAttribute","","",null,null],[17,"LLVMNoImplicitFloatAttribute","","",null,null],[17,"LLVMNakedAttribute","","",null,null],[17,"LLVMInlineHintAttribute","","",null,null],[17,"LLVMStackAlignment","","",null,null],[17,"LLVMReturnsTwice","","",null,null],[17,"LLVMUWTable","","",null,null],[17,"LLVMNonLazyBind","","",null,null],[11,"hash","","",28,null],[11,"cmp","","",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"option"}}],[11,"lt","","",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"bool"}}],[11,"le","","",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"bool"}}],[11,"gt","","",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"bool"}}],[11,"ge","","",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"llvmattribute"}],"output":{"name":"llvmattribute"}}],[11,"eq","","",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"llvmattribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",28,{"inputs":[{"name":"llvmattribute"}],"output":{"name":"llvmattribute"}}],[11,"all","","Returns the set containing all flags.",28,{"inputs":[{"name":"llvmattribute"}],"output":{"name":"llvmattribute"}}],[11,"bits","","Returns the raw value of the flags currently stored.",28,{"inputs":[{"name":"llvmattribute"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",28,{"inputs":[{"name":"llvmattribute"},{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",28,{"inputs":[{"name":"llvmattribute"},{"name":"c_int"}],"output":{"name":"llvmattribute"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",28,{"inputs":[{"name":"llvmattribute"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",28,{"inputs":[{"name":"llvmattribute"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":null}],[6,"Output","","",null,null],[11,"bitor","","Returns the union of the two sets of flags.",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"llvmattribute"}}],[6,"Output","","",null,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"llvmattribute"}}],[6,"Output","","",null,null],[11,"bitand","","Returns the intersection between the two sets of flags.",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"llvmattribute"}}],[6,"Output","","",null,null],[11,"sub","","Returns the set difference of the two sets of flags.",28,{"inputs":[{"name":"llvmattribute"},{"name":"llvmattribute"}],"output":{"name":"llvmattribute"}}],[6,"Output","","",null,null],[11,"not","","Returns the complement of this set of flags.",28,{"inputs":[{"name":"llvmattribute"}],"output":{"name":"llvmattribute"}}]],"paths":[[4,"LLVMOpcode"],[4,"LLVMTypeKind"],[4,"LLVMLinkage"],[4,"LLVMVisibility"],[4,"LLVMDLLStorageClass"],[4,"LLVMCallConv"],[4,"LLVMIntPredicate"],[4,"LLVMRealPredicate"],[4,"LLVMLandingPadClauseTy"],[4,"LLVMThreadLocalMode"],[4,"LLVMAtomicOrdering"],[4,"LLVMAtomicRMWBinOp"],[4,"LLVMDiagnosticSeverity"],[4,"LLVMVerifierFailureAction"],[3,"LLVMOpInfoSymbol1"],[3,"Struct_LLVMOpInfo1"],[3,"LLVMMCJITCompilerOptions"],[4,"llvm_lto_status_t"],[4,"LLVMLinkerMode"],[4,"lto_symbol_attributes"],[4,"lto_debug_model"],[4,"lto_codegen_model"],[4,"lto_codegen_diagnostic_severity_t"],[4,"LLVMByteOrdering"],[4,"LLVMCodeGenOptLevel"],[4,"LLVMRelocMode"],[4,"LLVMCodeModel"],[4,"LLVMCodeGenFileType"],[3,"LLVMAttribute"]]};
searchIndex['semver'] = {"items":[[0,"","semver","Semantic version parsing and comparison.",null,null],[3,"Version","","Represents a version number conforming to the semantic versioning scheme.",null,null],[12,"major","","The major version, to be incremented on incompatible changes.",0,null],[12,"minor","","The minor version, to be incremented when functionality is added in a\nbackwards-compatible manner.",0,null],[12,"patch","","The patch version, to be incremented when backwards-compatible bug\nfixes are made.",0,null],[12,"pre","","The pre-release version identifier, if one exists.",0,null],[12,"build","","The build metadata, ignored when determining version precedence.",0,null],[3,"VersionReq","","A `VersionReq` is a struct containing a list of predicates that can apply to ranges of version\nnumbers. Matching operations can then be done with the `VersionReq` against a particular\nversion to see if it satisfies some or all of the constraints.",null,null],[4,"Identifier","","An identifier in the pre-release or build metadata.",null,null],[13,"Numeric","","An identifier that's solely numbers.",1,null],[13,"AlphaNumeric","","An identifier with letters and numbers.",1,null],[4,"ParseError","","A `ParseError` is returned as the `Err` side of a `Result` when a version is attempted\nto be parsed.",null,null],[13,"NonAsciiIdentifier","","All identifiers must be ASCII.",2,null],[13,"IncorrectParse","","The version was mis-parsed.",2,null],[13,"GenericFailure","","Any other failure.",2,null],[4,"ReqParseError","","A `ReqParseError` is returned from methods which parse a string into a `VersionReq`. Each\nenumeration is one of the possible errors that can occur.",null,null],[13,"InvalidVersionRequirement","","The given version requirement is invalid.",3,null],[13,"OpAlreadySet","","You have already provided an operation, such as `=`, `~`, or `^`. Only use one.",3,null],[13,"InvalidSigil","","The sigil you have written is not correct.",3,null],[13,"VersionComponentsMustBeNumeric","","All components of a version must be numeric.",3,null],[13,"MajorVersionRequired","","At least a major version is required.",3,null],[13,"UnimplementedVersionRequirement","","An unimplemented version requirement.",3,null],[11,"fmt","","",1,{"inputs":[{"name":"identifier"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"cmp","","",1,{"inputs":[{"name":"identifier"},{"name":"identifier"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"identifier"},{"name":"identifier"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"identifier"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"identifier"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"identifier"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"identifier"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"identifier"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"identifier"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"identifier"}],"output":{"name":"identifier"}}],[11,"fmt","","",1,{"inputs":[{"name":"identifier"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"version"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"version"}],"output":{"name":"version"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"parse","","Parse a string into a semver object.",0,{"inputs":[{"name":"version"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"version"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"ordering"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,{"inputs":[{"name":"version"},{"name":"h"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"versionreq"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"versionreq"}],"output":{"name":"versionreq"}}],[11,"eq","","",4,{"inputs":[{"name":"versionreq"},{"name":"versionreq"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"versionreq"},{"name":"versionreq"}],"output":{"name":"bool"}}],[11,"eq","","",3,{"inputs":[{"name":"reqparseerror"},{"name":"reqparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"reqparseerror"},{"name":"reqparseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"reqparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"reqparseerror"}],"output":{"name":"reqparseerror"}}],[11,"fmt","","",3,{"inputs":[{"name":"reqparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",3,{"inputs":[{"name":"reqparseerror"}],"output":{"name":"str"}}],[11,"any","","`any()` is a factory method which creates a `VersionReq` with no constraints. In other\nwords, any version will match against it.",4,{"inputs":[{"name":"versionreq"}],"output":{"name":"versionreq"}}],[11,"parse","","`parse()` is the main constructor of a `VersionReq`. It turns a string like `\"^1.2.3\"`\nand turns it into a `VersionReq` that matches that particular constraint.",4,{"inputs":[{"name":"versionreq"},{"name":"str"}],"output":{"name":"result"}}],[11,"exact","","`exact()` is a factory method which creates a `VersionReq` with one exact constraint.",4,{"inputs":[{"name":"versionreq"},{"name":"version"}],"output":{"name":"versionreq"}}],[11,"matches","","`matches()` matches a given `Version` against this `VersionReq`.",4,{"inputs":[{"name":"versionreq"},{"name":"version"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"versionreq"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Version"],[4,"Identifier"],[4,"ParseError"],[4,"ReqParseError"],[3,"VersionReq"]]};
searchIndex['glob'] = {"items":[[0,"","glob","Support for matching file paths against Unix shell style patterns.",null,null],[3,"Paths","","An iterator that yields `Path`s from the filesystem that match a particular\npattern.",null,null],[3,"GlobError","","A glob iteration error.",null,null],[3,"PatternError","","A pattern parsing error.",null,null],[12,"pos","","The approximate character index of where the error occurred.",0,null],[12,"msg","","A message describing the error.",0,null],[3,"Pattern","","A compiled Unix shell style pattern.",null,null],[3,"MatchOptions","","Configuration options to modify the behaviour of `Pattern::matches_with(..)`",null,null],[12,"case_sensitive","","Whether or not patterns should be matched in a case-sensitive manner.\nThis currently only considers upper/lower case relationships between\nASCII characters, but in future this might be extended to work with\nUnicode.",1,null],[12,"require_literal_separator","","If this is true then path-component separator characters (e.g. `/` on\nPosix) must be matched by a literal `/`, rather than by `*` or `?` or\n`[...]`",1,null],[12,"require_literal_leading_dot","","If this is true then paths that contain components that start with a `.`\nwill not match unless the `.` appears literally in the pattern: `*`, `?`\nor `[...]` will not match. This is useful because such files are\nconventionally considered hidden on Unix systems and it might be\ndesirable to skip them when listing files.",1,null],[5,"glob","","Return an iterator that produces all the Paths that match the given pattern,\nwhich may be absolute or relative to the current working directory.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"glob_with","","Return an iterator that produces all the Paths that match the given pattern,\nwhich may be absolute or relative to the current working directory.",null,{"inputs":[{"name":"str"},{"name":"matchoptions"}],"output":{"name":"result"}}],[6,"GlobResult","","An alias for a glob iteration result.",null,null],[11,"fmt","","",2,{"inputs":[{"name":"globerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"path","","The Path that the error corresponds to.",2,{"inputs":[{"name":"globerror"}],"output":{"name":"path"}}],[11,"error","","The error in question.",2,{"inputs":[{"name":"globerror"}],"output":{"name":"error"}}],[11,"fmt","","",2,{"inputs":[{"name":"globerror"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Item","","",null,null],[11,"next","","",3,{"inputs":[{"name":"paths"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"patternerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"patternerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"pattern"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",4,{"inputs":[{"name":"pattern"}],"output":{"name":"pattern"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"pattern"}],"output":{"name":"pattern"}}],[11,"fmt","","",4,{"inputs":[{"name":"pattern"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",4,{"inputs":[{"name":"pattern"},{"name":"str"}],"output":{"name":"result"}}],[11,"new","","This function compiles Unix shell style patterns.",4,{"inputs":[{"name":"pattern"},{"name":"str"}],"output":{"name":"result"}}],[11,"escape","","Escape metacharacters within the given string by surrounding them in\nbrackets. The resulting string will, when compiled into a `Pattern`,\nmatch the input string and nothing else.",4,{"inputs":[{"name":"pattern"},{"name":"str"}],"output":{"name":"string"}}],[11,"matches","","Return if the given `str` matches this `Pattern` using the default\nmatch options (i.e. `MatchOptions::new()`).",4,{"inputs":[{"name":"pattern"},{"name":"str"}],"output":{"name":"bool"}}],[11,"matches_path","","Return if the given `Path`, when converted to a `str`, matches this\n`Pattern` using the default match options (i.e. `MatchOptions::new()`).",4,{"inputs":[{"name":"pattern"},{"name":"path"}],"output":{"name":"bool"}}],[11,"matches_with","","Return if the given `str` matches this `Pattern` using the specified\nmatch options.",4,{"inputs":[{"name":"pattern"},{"name":"str"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"matches_path_with","","Return if the given `Path`, when converted to a `str`, matches this\n`Pattern` using the specified match options.",4,{"inputs":[{"name":"pattern"},{"name":"path"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"as_str","","Access the original glob pattern.",4,{"inputs":[{"name":"pattern"}],"output":{"name":"str"}}],[11,"default","","",1,{"inputs":[{"name":"matchoptions"}],"output":{"name":"matchoptions"}}],[11,"hash","","",1,null],[11,"cmp","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"matchoptions"}],"output":{"name":"matchoptions"}}],[11,"new","","Constructs a new `MatchOptions` with default field values. This is used\nwhen calling functions that do not take an explicit `MatchOptions`\nparameter.",1,{"inputs":[{"name":"matchoptions"}],"output":{"name":"matchoptions"}}]],"paths":[[3,"PatternError"],[3,"MatchOptions"],[3,"GlobError"],[3,"Paths"],[3,"Pattern"]]};
searchIndex['cbox'] = {"items":[[0,"","cbox","Provides two types, `CSemiBox` and `DisposeRef`",null,null],[3,"CSemiBox","","A wrapper for pointers made by C that are now partially owned in Rust.",null,null],[3,"CBox","","A wrapper for pointers made by C that are now completely owned by Rust, so\nthey are not limited by any lifetimes.",null,null],[8,"DisposeRef","","Implemented by any type of which its reference represents a C pointer that can be disposed.",null,null],[16,"RefTo","","What a reference to this type represents as a C pointer.",0,null],[11,"dispose","","Destroy the contents at the pointer's location.",0,null],[11,"new","","Wrap the pointer in a `CSemiBox`",1,null],[11,"as_ptr","","Returns the internal pointer",1,null],[11,"unwrap","","Returns the internal pointer",1,null],[11,"from","","",1,null],[11,"drop","","Run the destructor",1,{"inputs":[{"name":"csemibox"}],"output":null}],[6,"Target","","",null,null],[11,"deref","","",1,{"inputs":[{"name":"csemibox"}],"output":{"name":"d"}}],[11,"borrow","","",1,{"inputs":[{"name":"csemibox"}],"output":{"name":"d"}}],[11,"deref_mut","","",1,{"inputs":[{"name":"csemibox"}],"output":{"name":"d"}}],[11,"fmt","","",1,{"inputs":[{"name":"csemibox"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"csemibox"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"csemibox"},{"name":"t"}],"output":{"name":"bool"}}],[11,"from","","",1,{"inputs":[{"name":"csemibox"},{"name":"cstr"}],"output":{"name":"csemibox"}}],[6,"RefTo","","",null,null],[11,"new","","Wrap the pointer in a `CBox`.",2,null],[11,"as_ptr","","Returns the internal pointer.",2,null],[11,"unwrap","","Returns the internal pointer.",2,null],[11,"as_semi","","Returns the box as a 'CSemiBox'.",2,{"inputs":[{"name":"cbox"}],"output":{"name":"csemibox"}}],[11,"as_semi_mut","","Returns the box as a 'CSemiBox'.",2,{"inputs":[{"name":"cbox"}],"output":{"name":"csemibox"}}],[11,"from","","Copy this text using malloc and strcpy.",2,{"inputs":[{"name":"cbox"},{"name":"str"}],"output":{"name":"cbox"}}],[6,"Target","","",null,null],[11,"deref","","",2,{"inputs":[{"name":"cbox"}],"output":{"name":"str"}}],[11,"clone","","",2,{"inputs":[{"name":"cbox"}],"output":{"name":"cbox"}}],[11,"fmt","","",2,{"inputs":[{"name":"cbox"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"cbox"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Target","","",null,null],[11,"deref","","",2,{"inputs":[{"name":"cbox"}],"output":{"name":"t"}}],[11,"borrow","","",2,{"inputs":[{"name":"cbox"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"cbox"}],"output":{"name":"t"}}],[11,"eq","","",2,{"inputs":[{"name":"cbox"},{"name":"t"}],"output":{"name":"bool"}}]],"paths":[[8,"DisposeRef"],[3,"CSemiBox"],[3,"CBox"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries",null,null],[0,"types","","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",0,null],[13,"__variant2","","",0,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"glob_t","libc::types::os::common::posix01","",null,null],[12,"gl_pathc","","",1,null],[12,"gl_pathv","","",1,null],[12,"gl_offs","","",1,null],[12,"__unused1","","",1,null],[12,"__unused2","","",1,null],[12,"__unused3","","",1,null],[12,"__unused4","","",1,null],[12,"__unused5","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[4,"timezone","","",null,null],[6,"pthread_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sighandler_t","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",2,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[0,"bsd43","libc::types::os::common","",null,null],[3,"rusage","libc::types::os::common::bsd43","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[11,"clone","","",5,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_family","","",6,null],[12,"sa_data","","",6,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",7,null],[12,"__ss_align","","",7,null],[12,"__ss_pad2","","",7,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",8,null],[12,"sin_port","","",8,null],[12,"sin_addr","","",8,null],[12,"sin_zero","","",8,null],[3,"in_addr","","",null,null],[12,"s_addr","","",9,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",10,null],[12,"sin6_port","","",10,null],[12,"sin6_flowinfo","","",10,null],[12,"sin6_addr","","",10,null],[12,"sin6_scope_id","","",10,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",11,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",12,null],[12,"imr_interface","","",12,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",13,null],[12,"ipv6mr_interface","","",13,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",14,null],[12,"ai_family","","",14,null],[12,"ai_socktype","","",14,null],[12,"ai_protocol","","",14,null],[12,"ai_addrlen","","",14,null],[12,"ai_addr","","",14,null],[12,"ai_canonname","","",14,null],[12,"ai_next","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",16,null],[12,"ifa_name","","",16,null],[12,"ifa_flags","","",16,null],[12,"ifa_addr","","",16,null],[12,"ifa_netmask","","",16,null],[12,"ifa_ifu","","",16,null],[12,"ifa_data","","",16,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[11,"clone","","",6,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",7,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",8,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",9,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",10,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",11,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",12,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",14,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","libc::types::os::arch","",null,null],[3,"stat","libc::types::os::arch::posix01","",null,null],[12,"st_dev","","",17,null],[12,"st_ino","","",17,null],[12,"st_nlink","","",17,null],[12,"st_mode","","",17,null],[12,"st_uid","","",17,null],[12,"st_gid","","",17,null],[12,"__pad0","","",17,null],[12,"st_rdev","","",17,null],[12,"st_size","","",17,null],[12,"st_blksize","","",17,null],[12,"st_blocks","","",17,null],[12,"st_atime","","",17,null],[12,"st_atime_nsec","","",17,null],[12,"st_mtime","","",17,null],[12,"st_mtime_nsec","","",17,null],[12,"st_ctime","","",17,null],[12,"st_ctime_nsec","","",17,null],[12,"__unused","","",17,null],[3,"utimbuf","","",null,null],[12,"actime","","",18,null],[12,"modtime","","",18,null],[3,"pthread_attr_t","","",null,null],[12,"__size","","",19,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[11,"clone","","",17,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",18,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",19,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[0,"extra","libc::types::os::arch","",null,null],[3,"sockaddr_ll","libc::types::os::arch::extra","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[11,"clone","","",20,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"posix88","libc::consts::os","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EDOTDOT","","",null,null],[17,"EBADMSG","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"ERFKILL","","",null,null],[17,"EHWPOISON","","",null,null],[0,"posix01","libc::consts::os","",null,null],[17,"F_DUPFD","libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"MADV_NORMAL","libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"AF_PACKET","libc::consts::os::extra","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[0,"sysconf","libc::consts::os","",null,null],[17,"_SC_ARG_MAX","libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[0,"dirent","libc::funcs::posix88","",null,null],[5,"opendir","libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"getsid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"usleep","","",null,null],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[0,"signal","libc::funcs::posix88","",null,null],[5,"kill","libc::funcs::posix88::signal","",null,null],[0,"mman","libc::funcs::posix88","",null,null],[5,"mlock","libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","libc::funcs::posix88","",null,null],[5,"if_nametoindex","libc::funcs::posix88::net","",null,null],[0,"posix01","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix01","",null,null],[5,"lstat","libc::funcs::posix01::stat_","",null,null],[0,"unistd","libc::funcs::posix01","",null,null],[5,"readlink","libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,null],[5,"fdatasync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[0,"signal","libc::funcs::posix01","",null,null],[5,"signal","libc::funcs::posix01::signal","",null,null],[0,"glob","libc::funcs::posix01","",null,null],[5,"glob","libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","libc::funcs::posix01","",null,null],[5,"posix_madvise","libc::funcs::posix01::mman","",null,null],[0,"resource","libc::funcs::posix01","",null,null],[5,"getrlimit","libc::funcs::posix01::resource","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,null],[0,"bsd44","libc::funcs","",null,null],[5,"getdtablesize","libc::funcs::bsd44","",null,null],[5,"ioctl","","",null,null],[5,"madvise","","",null,null],[5,"mincore","","",null,null]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};
searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator.",null,null],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
initSearch(searchIndex);
